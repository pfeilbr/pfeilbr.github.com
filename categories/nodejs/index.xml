<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>nodejs on Brian Pfeil</title>
        <link>https://brianpfeil.com/categories/nodejs/</link>
        <description>Recent content in nodejs on Brian Pfeil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 25 Mar 2015 19:06:15 +0000</lastBuildDate><atom:link href="https://brianpfeil.com/categories/nodejs/index.xml" rel="self" type="application/rss+xml" />
    <item>
<title>Dockerized Node.js App on Elastic Beanstalk Example</title>
<link>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/dockerized-nodejs-app-on-elastic-beanstalk-example/</link>
<pubDate>Wed, 25 Mar 2015 19:06:15 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/dockerized-nodejs-app-on-elastic-beanstalk-example/</guid>
<description>&lt;p&gt;Example of developing and deploying a &lt;a href=&#34;(https://www.docker.com/)&#34;&gt;dockerized&lt;/a&gt; &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; app to &lt;a href=&#34;http://aws.amazon.com/elasticbeanstalk/&#34;&gt;Elastic Beanstalk&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;source on Github at &lt;a href=&#34;https://github.com/pfeilbr/Elastic-Beanstalk-Docker-Node.js-Example&#34;&gt;pfeilbr/Elastic-Beanstalk-Docker-Node.js-Example&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;local-development-workflow&#34;&gt;Local Development Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Edit code. e.g. &lt;code&gt;index.js&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build image&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ docker build --tag=&amp;#34;pfeilbr/eb-docker-node-example&amp;#34; .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ docker run -p 80:80 -it -rm -name eb-docker-node-example pfeilbr/eb-docker-node-example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get docker host ip &lt;em&gt;(optional.  only if using &lt;a href=&#34;http://boot2docker.io/&#34;&gt;boot2docker&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ boot2docker ip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open browser to &lt;code&gt;http://&amp;lt;boot2docker ip&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;initial-deployment&#34;&gt;Initial Deployment&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Init git repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git init .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add files to repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git commit -m &amp;#34;init&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create eb app&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb init # populate details
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Populate all details&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create environment for app&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb create dev-env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; Must immediately update the ec2 instance with tags so it doesn&amp;rsquo;t get terminated.  Enable termination protection on the ec2 instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://note.io/1ETb45Y&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploying-updates&#34;&gt;Deploying Updates&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Modify code and test via [Local Development Workflow]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git commit -a -m &amp;#34;my updates&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy to eb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Takes between 3-5 min to deploy changes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://note.io/1FFQXuL&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;establish-interactive-bash-shell-in-running-docker-container&#34;&gt;Establish Interactive Bash Shell in Running Docker Container&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ssh into ec2 docker host server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get container name&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ sudo docker ps # save off name of container
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect/attach with an interactive bash session&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ sudo docker exec -i -t &amp;lt;container name&amp;gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example Session with Output&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://note.io/1CYSlIH&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Cross-platform Desktop Apps with NW.js</title>
<link>https://brianpfeil.com/post/cross-platform-desktop-apps-with-nw-js/</link>
<pubDate>Sun, 15 Feb 2015 11:22:57 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/cross-platform-desktop-apps-with-nw-js/</guid>
<description>&lt;p&gt;&lt;img src=&#34;images/nw.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Post is based on the &lt;a href=&#34;https://github.com/pfeilbr/nwjs-playground&#34;&gt;pfeilbr/nwjs-playground&lt;/a&gt; project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;nwjshttpnwjsio-playground&#34;&gt;&lt;a href=&#34;http://nwjs.io&#34;&gt;NW.js&lt;/a&gt; Playground&lt;/h1&gt;
&lt;p&gt;Project to learn and experiment with &lt;a href=&#34;http://nwjs.io&#34;&gt;NW.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;NW.js enables the creation of cross platform desktop applications.  Your UI is built with standard html, js, and css technologies.  Access to the underlying desktop OS capabilites are provided by giving you access to &lt;a href=&#34;http://nodejs.org/&#34;&gt;node.js&lt;/a&gt;.  You can use the Node.js core modules plus any of the 3rd party &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;NPM&lt;/a&gt; modules;&lt;/p&gt;
&lt;h2 id=&#34;installing-nwjs&#34;&gt;Installing NW.js&lt;/h2&gt;
&lt;p&gt;Download and unpack nwjs app for your platform from &lt;a href=&#34;http://nwjs.io&#34;&gt;http://nwjs.io&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On OSX you&amp;rsquo;ll end up with &lt;code&gt;/Applications/nwjs.app&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;developing-your-app&#34;&gt;Developing Your App&lt;/h2&gt;
&lt;p&gt;create &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;see &lt;a href=&#34;https://github.com/nwjs/nw.js#quick-start&#34;&gt;nw.js quick-start&lt;/a&gt; for details&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This app is a minimal example with an added &lt;code&gt;app.js&lt;/code&gt; file for javascript.  It&amp;rsquo;s sets the &lt;code&gt;document.body&lt;/code&gt; to &lt;code&gt;&#39;Hello There&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;running&#34;&gt;Running&lt;/h2&gt;
&lt;p&gt;Create alias in &lt;code&gt;~/.bash_profile&lt;/code&gt;to ease the use from terminal&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# alias to nw&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;nw&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/Applications/nwjs.app/Contents/MacOS/nwjs&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/projects/nwjs-playground
$ nw .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;packaging-as-app-on-osx&#34;&gt;Packaging as app on OSX&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create &lt;code&gt;.nw&lt;/code&gt; file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ cd ~/projects/nwjs-playground
$ zip -r ../${PWD##*/}.nw *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;.nw&lt;/code&gt; file will be created along side the project directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make copy of &lt;code&gt;nwjs.app&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ cp -r /Applications/nwjs.app /Applications/myapp.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy &lt;code&gt;.nw&lt;/code&gt; file into myapp.app bundle&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ cp ../nwjs-playground.nw /Applications/myapp.app/Contents/Resources/app.nw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
</item>
    
  </channel>
</rss>
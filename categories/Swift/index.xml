<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Swift on Brian Pfeil</title>
        <link>https://brianpfeil.com/categories/Swift/</link>
        <description>Recent content in Swift on Brian Pfeil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 15 Sep 2015 00:00:00 -0400</lastBuildDate><atom:link href="https://brianpfeil.com/categories/Swift/index.xml" rel="self" type="application/rss+xml" />
    <item>
<title>OSX Audio</title>
<link>https://brianpfeil.com/post/osx-audio/</link>
<pubDate>Tue, 15 Sep 2015 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/osx-audio/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/osx-audio-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/osx-audio-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Playground to learn the various audio frameworks and APIs&lt;/p&gt;
&lt;h2 id=&#34;server&#34;&gt;Server&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;server/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;contains a node server (websocket) that the playground code interacts with&lt;/p&gt;
</description>
</item>
    
    <item>
<title>iOS Swift</title>
<link>https://brianpfeil.com/post/ios-swift/</link>
<pubDate>Sun, 13 Jul 2014 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/ios-swift/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/ios-swift-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/ios-swift-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Scratchpad to learn and explore swift&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Mac Swift</title>
<link>https://brianpfeil.com/post/mac-swift/</link>
<pubDate>Thu, 05 Jun 2014 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/mac-swift/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/mac-swift-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/mac-swift-playground&lt;/a&gt;
&lt;/div&gt;
&lt;div style=&#34;clear: both&#34;&gt;&lt;/div&gt;
&lt;h2 id=&#34;swifthttpsdeveloperapplecomlibraryprereleaseiosdocumentationswiftconceptualswift_programming_language-playground&#34;&gt;&lt;a href=&#34;https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language&#34;&gt;Swift&lt;/a&gt; Playground&lt;/h2&gt;
&lt;p&gt;Swift playground for exploring the &lt;a href=&#34;https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language&#34;&gt;swift programming language&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;playground-specific-functions&#34;&gt;Playground Specific Functions&lt;/h2&gt;
&lt;p&gt;There are a set of functions that enable the code you write to interact with the plaground UI.  For example, you can display a UIView live.  The &lt;code&gt;XCPlayground&lt;/code&gt; module provides these functions&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;XCPSetExecutionShouldContinueIndefinitely(continueIndefinitely:Bool)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Allows async code to run.  For example, &lt;code&gt;dispatch_*&lt;/code&gt; calls and networking.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;XCPCaptureValue(identifier: String, value:AnyObject)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Displays the value in the view pane with the identifier as the title&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;XCPShowView(identifier: String, view: NSView)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Display the provided view in the view pane with the identifier as the title&lt;/p&gt;
</description>
</item>
    
  </channel>
</rss>
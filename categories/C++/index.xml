<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>C&#43;&#43; on Brian Pfeil</title>
        <link>https://brianpfeil.com/categories/C&#43;&#43;/</link>
        <description>Recent content in C&#43;&#43; on Brian Pfeil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 02 Jan 2020 00:00:00 -0500</lastBuildDate><atom:link href="https://brianpfeil.com/categories/C++/index.xml" rel="self" type="application/rss+xml" />
    <item>
<title>Googletest</title>
<link>https://brianpfeil.com/post/googletest/</link>
<pubDate>Thu, 02 Jan 2020 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/googletest/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/googletest-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/googletest-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn &lt;a href=&#34;https://github.com/google/googletest&#34;&gt;Googletest&lt;/a&gt;, Google Testing and Mocking Framework with CMake&lt;/p&gt;
&lt;p&gt;based on &lt;a href=&#34;https://raymii.org/s/tutorials/Cpp_project_setup_with_cmake_and_unit_tests.html&#34;&gt;https://raymii.org/s/tutorials/Cpp_project_setup_with_cmake_and_unit_tests.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# begin: one-time setup to add googletest dependency&lt;/span&gt;
mkdir lib
&lt;span class=&#34;nb&#34;&gt;pushd&lt;/span&gt; lib
git clone https://github.com/google/googletest/
&lt;span class=&#34;nb&#34;&gt;popd&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# end: one-time setup&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#clean&lt;/span&gt;
./run.sh clean

&lt;span class=&#34;c1&#34;&gt;# build&lt;/span&gt;
./run.sh buildandtest

&lt;span class=&#34;c1&#34;&gt;# run tests&lt;/span&gt;
./run.sh &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# build and run tests when file changes under src/ and tst/&lt;/span&gt;
./run.sh watch

&lt;span class=&#34;c1&#34;&gt;# build main binary&lt;/span&gt;
./run.sh buildmain

&lt;span class=&#34;c1&#34;&gt;# run main binary&lt;/span&gt;
./run.sh main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;googletest-command-line-examples&#34;&gt;googletest command line examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# run all tests&lt;/span&gt;
./build/tst/app_tst

&lt;span class=&#34;c1&#34;&gt;# list tests&lt;/span&gt;
./build/tst/app_tst --gtest_list_tests

&lt;span class=&#34;c1&#34;&gt;# run specific test&lt;/span&gt;
./build/tst/app_tst --gtest_filter&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;MyLib.adhoc

&lt;span class=&#34;c1&#34;&gt;# run all tests in MyLib&lt;/span&gt;
./build/tst/app_tst --gtest_filter&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;MyLib.*&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# list command line options&lt;/span&gt;
./build/tst/app_tst --help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>AWS SDK CPP</title>
<link>https://brianpfeil.com/post/aws-sdk-cpp/</link>
<pubDate>Tue, 25 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/aws-sdk-cpp/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/aws-sdk-cpp-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/aws-sdk-cpp-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn &lt;a href=&#34;https://github.com/aws/aws-sdk-cpp&#34;&gt;aws-sdk-app&lt;/a&gt; C++ SDK&lt;/p&gt;
&lt;p&gt;see &lt;code&gt;README.md&lt;/code&gt; file(s) in subdirectories of &lt;a href=&#34;src&#34;&gt;&lt;code&gt;src&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;install-aws-sdk-cpp&#34;&gt;install aws-sdk-cpp&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/dev
git clone https://github.com/aws/aws-sdk-cpp.git
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; aws-sdk-cpp
mkdir build
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; build
cmake ..
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build-and-run-example&#34;&gt;build and run example&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; src/s3-example
mkdir -p build &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; build
cmake .. &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make
&lt;span class=&#34;c1&#34;&gt;# run&lt;/span&gt;
./s3-example 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;output&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHbKsr3KeNGBJvW9Vd8ksfJseH3wqGG7y4B/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Install File Locations&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/usr/local/lib/cmake/AWSSDK&lt;/code&gt; - cmake modules&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/include&lt;/code&gt; - headers installed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/lib&lt;/code&gt; - libraries installed (e.g. libaws-cpp-sdk-core.dylib)&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Google Test CPP Test Framework</title>
<link>https://brianpfeil.com/post/google-test-cpp-test-framework/</link>
<pubDate>Tue, 25 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/google-test-cpp-test-framework/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/google-test-cpp-test-framework-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/google-test-cpp-test-framework-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn &lt;a href=&#34;https://github.com/google/googletest&#34;&gt;googletest&lt;/a&gt; / &lt;a href=&#34;https://github.com/google/googletest&#34;&gt;gtest&lt;/a&gt; C++ test framework&lt;/p&gt;
&lt;p&gt;see &lt;code&gt;README.md&lt;/code&gt; in each subdirectory under &lt;a href=&#34;src&#34;&gt;&lt;code&gt;src&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;gtest-install&#34;&gt;gtest install&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# download source&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/dev
curl -LO https://github.com/google/googletest/archive/release-1.8.1.zip
unzip release-1.8.1.zip
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; googletest-release-1.8.1
mkdir build
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; build
cmake ..
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>Modern CPP</title>
<link>https://brianpfeil.com/post/modern-cpp/</link>
<pubDate>Mon, 24 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/modern-cpp/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/modern-cpp-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/modern-cpp-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;based on &lt;a href=&#34;https://github.com/nesteruk/ModernCpp&#34;&gt;nesteruk/ModernCpp&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;playground.cpp&#34;&gt;&lt;code&gt;playground.cpp&lt;/code&gt;&lt;/a&gt; - main file&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;scripts&#34;&gt;&lt;code&gt;scripts/&lt;/code&gt;&lt;/a&gt; - build, run, etc. scripts&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE (to self): developed and ran on 2016 MacBook Pro.  Depends on local file locations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;development&#34;&gt;development&lt;/h2&gt;
&lt;p&gt;build and run on file contents change (live reload)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# start watcher&lt;/span&gt;
./scripts/build-and-run-on-change playground.cpp

&lt;span class=&#34;c1&#34;&gt;# edit and save `playground.cpp` for live reload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>Lua C API</title>
<link>https://brianpfeil.com/post/lua-c-api/</link>
<pubDate>Tue, 24 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/lua-c-api/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/Lua-c-api-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/Lua-c-api-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn and experiment with &lt;a href=&#34;https://www.lua.org/manual/5.3/#api&#34;&gt;Lua C API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;see &lt;a href=&#34;Lua-c-api-playground/main.cpp&#34;&gt;Lua-c-api-playground/main.cpp&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;xcode-project-config&#34;&gt;Xcode Project Config&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAFJER84WslG6L2PE5NmRurmTYUFH3LWyEkB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAFsRcTOjdtLgJy3ALariLx7RGl_TKAfYzAB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHVh3E76RlO1JPdiaVZXEAtsiNhGrU20PEB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
</item>
    
    <item>
<title>SFML MacOS</title>
<link>https://brianpfeil.com/post/sfml-macos/</link>
<pubDate>Tue, 27 Feb 2018 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/sfml-macos/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/sfml-macos-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/sfml-macos-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn &lt;a href=&#34;https://www.sfml-dev.org/&#34;&gt;SFML&lt;/a&gt;, the Simple and Fast Multimedia Library&lt;/p&gt;
</description>
</item>
    
    <item>
<title>V8</title>
<link>https://brianpfeil.com/post/v8/</link>
<pubDate>Tue, 19 May 2015 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/v8/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/v8-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/v8-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Project to learn and experiment with the &lt;a href=&#34;https://developers.google.com/v8/&#34;&gt;V8&lt;/a&gt; javascript engine.&lt;/p&gt;
&lt;h2 id=&#34;building-v8-with-xcode&#34;&gt;Building V8 with Xcode&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href=&#34;http://dev.chromium.org/developers/how-tos/install-depot-tools&#34;&gt;depot-tools&lt;/a&gt;.  And add to &lt;code&gt;PATH&lt;/code&gt; environment variable.&lt;/li&gt;
&lt;li&gt;Clone repo
$ git clone &lt;a href=&#34;https://chromium.googlesource.com/v8/v8.git&#34;&gt;https://chromium.googlesource.com/v8/v8.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Build
$ cd v8
$ build/gyp_v8 -Dtarget_arch=x64&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;This project was created with a new &lt;code&gt;Application | Command Line Tool&lt;/code&gt; with the language set to &lt;code&gt;C++&lt;/code&gt; in Xcode.&lt;/p&gt;
&lt;p&gt;The static libraries from the v8 build were copied in
&lt;img src=&#34;http://note.io/1c3cOzl&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The v8 include files were copied from &lt;code&gt;v8/include&lt;/code&gt; to &lt;code&gt;v8-includes&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/v8/&#34;&gt;Google V8 Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>docker on Brian Pfeil</title>
        <link>https://brianpfeil.com/tags/docker/</link>
        <description>Recent content in docker on Brian Pfeil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 24 Jun 2019 00:00:00 -0400</lastBuildDate><atom:link href="https://brianpfeil.com/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
<title>Golang Debug In Docker with Delve</title>
<link>https://brianpfeil.com/post/golang-debug-in-docker-with-delve/</link>
<pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/golang-debug-in-docker-with-delve/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/golang-debug-in-docker-with-delve-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/golang-debug-in-docker-with-delve-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;based on &lt;a href=&#34;https://medium.com/@kaperys/delve-into-docker-d6c92be2f823&#34;&gt;Debugging Go using Delve, Docker and VS Code&lt;/a&gt; post&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;make run &lt;span class=&#34;c1&#34;&gt;# or make build first&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# set breakpoint in vscode on line 18, then Debug | Start Debugging&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-delve/delve/blob/master/Documentation/usage/dlv_debug.md&#34;&gt;dlv debug&lt;/a&gt; cli docs&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Heroku Docker</title>
<link>https://brianpfeil.com/post/heroku-docker/</link>
<pubDate>Wed, 23 Sep 2015 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/heroku-docker/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/heroku-docker-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/heroku-docker-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://static-content-01.s3-website-us-east-1.amazonaws.com/1__pfeilbr_ifa102990____projects_heroku-container-playground__zsh__and_README_md_%E2%80%94__Users_pfeilbr_projects_heroku-docker-playground_1DCCBC2B.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;heroku-docker-playground&#34;&gt;Heroku Docker Playground&lt;/h1&gt;
&lt;p&gt;To learn &lt;a href=&#34;https://devcenter.heroku.com/articles/docker&#34;&gt;heroku-docker&lt;/a&gt; to Build, run and deploy Heroku apps with Docker&lt;/p&gt;
&lt;h2 id=&#34;deploy-note&#34;&gt;Deploy Note&lt;/h2&gt;
&lt;p&gt;Renamed app to &amp;ldquo;heroku-docker-playground&amp;rdquo; via heroku web app.  Need to push via the following.&lt;/p&gt;
&lt;p&gt;heroku docker:release &amp;ndash;app heroku-docker-playground&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/docker&#34;&gt;Build and Deploy with Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Docker Hub Automated Build</title>
<link>https://brianpfeil.com/post/docker-hub-automated-build/</link>
<pubDate>Thu, 20 Aug 2015 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/docker-hub-automated-build/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/docker-hub-automated-build-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/docker-hub-automated-build-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;see &lt;a href=&#34;https://docs.docker.com/docker-hub/github/&#34;&gt;https://docs.docker.com/docker-hub/github/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github Services&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://static-content-01.s3-website-us-east-1.amazonaws.com//Webhooks___Services_1B961041.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://static-content-01.s3-website-us-east-1.amazonaws.com//Webhook_-_Docker_1B96107D.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Running Elasticsearch on AWS Elastic Beanstalk</title>
<link>https://brianpfeil.com/post/running-elasticsearch-on-elastic-beanstalk/</link>
<pubDate>Wed, 25 Mar 2015 21:25:09 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/running-elasticsearch-on-elastic-beanstalk/</guid>
<description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; code on github @ &lt;a href=&#34;https://github.com/pfeilbr/Elastic-Beanstalk-Dockerrun.aws.json-Example&#34;&gt;pfeilbr/Elastic-Beanstalk-Dockerrun.aws.json-Example&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This article will show you the steps to run &lt;a href=&#34;https://www.elastic.co/&#34;&gt;elasticsearch&lt;/a&gt; on &lt;a href=&#34;http://aws.amazon.com/elasticbeanstalk/&#34;&gt;AWS Elastic Beanstalk&lt;/a&gt;. This example uses the &lt;a href=&#34;https://registry.hub.docker.com/_/elasticsearch/&#34;&gt;elasticsearch docker image&lt;/a&gt; as an example.  Once running you can visit &lt;code&gt;http://&amp;lt;beanstalk domain&amp;gt;/?pretty&lt;/code&gt; an you will see the root elastic search JSON response.&lt;/p&gt;
&lt;h2 id=&#34;initial-deployment&#34;&gt;Initial Deployment&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Modify &lt;code&gt;Dockerrun.aws.json&lt;/code&gt; for your needs.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_docker_image.html#create_deploy_docker_image_dockerrun&#34;&gt;Dockerrun.aws.json&lt;/a&gt; reference&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit changes to repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ git commit -a -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;changes&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;assumes &lt;code&gt;Dockerrun.aws.json&lt;/code&gt; has already been added to repo.  if not, &lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create eb app&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb init # populate details
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: select Docker.  Populate all details&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create environment for app&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb create dev-env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; Must immediately update the ec2 instance with tags so it doesn&amp;rsquo;t get terminated.  Enable termination protection on the ec2 instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;deploying-updates&#34;&gt;Deploying Updates&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Modify &lt;code&gt;Dockerrun.aws.json&lt;/code&gt; for your needs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git commit -a -m &amp;#34;my updates&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy to eb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Takes between 3-5 min to deploy changes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;
&lt;p&gt;Port mapping details specific to aws beanstalk&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/config.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Dockerized Node.js App on Elastic Beanstalk Example</title>
<link>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/dockerized-nodejs-app-on-elastic-beanstalk-example/</link>
<pubDate>Wed, 25 Mar 2015 19:06:15 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/dockerized-nodejs-app-on-elastic-beanstalk-example/</guid>
<description>&lt;p&gt;Example of developing and deploying a &lt;a href=&#34;(https://www.docker.com/)&#34;&gt;dockerized&lt;/a&gt; &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; app to &lt;a href=&#34;http://aws.amazon.com/elasticbeanstalk/&#34;&gt;Elastic Beanstalk&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;source on Github at &lt;a href=&#34;https://github.com/pfeilbr/Elastic-Beanstalk-Docker-Node.js-Example&#34;&gt;pfeilbr/Elastic-Beanstalk-Docker-Node.js-Example&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;local-development-workflow&#34;&gt;Local Development Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Edit code. e.g. &lt;code&gt;index.js&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build image&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ docker build --tag=&amp;#34;pfeilbr/eb-docker-node-example&amp;#34; .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ docker run -p 80:80 -it -rm -name eb-docker-node-example pfeilbr/eb-docker-node-example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get docker host ip &lt;em&gt;(optional.  only if using &lt;a href=&#34;http://boot2docker.io/&#34;&gt;boot2docker&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ boot2docker ip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open browser to &lt;code&gt;http://&amp;lt;boot2docker ip&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;initial-deployment&#34;&gt;Initial Deployment&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Init git repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git init .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add files to repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git commit -m &amp;#34;init&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create eb app&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb init # populate details
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Populate all details&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create environment for app&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb create dev-env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; Must immediately update the ec2 instance with tags so it doesn&amp;rsquo;t get terminated.  Enable termination protection on the ec2 instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://note.io/1ETb45Y&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploying-updates&#34;&gt;Deploying Updates&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Modify code and test via [Local Development Workflow]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git commit -a -m &amp;#34;my updates&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy to eb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Takes between 3-5 min to deploy changes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://note.io/1FFQXuL&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;establish-interactive-bash-shell-in-running-docker-container&#34;&gt;Establish Interactive Bash Shell in Running Docker Container&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ssh into ec2 docker host server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ eb ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get container name&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ sudo docker ps # save off name of container
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect/attach with an interactive bash session&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ sudo docker exec -i -t &amp;lt;container name&amp;gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;``&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example Session with Output&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://note.io/1CYSlIH&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
</item>
    
  </channel>
</rss>
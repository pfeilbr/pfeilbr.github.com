<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>flask on Brian Pfeil</title>
        <link>https://brianpfeil.com/tags/flask/</link>
        <description>Recent content in flask on Brian Pfeil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 13 Nov 2020 00:00:00 -0500</lastBuildDate><atom:link href="https://brianpfeil.com/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    <item>
<title>Serverless Flask</title>
<link>https://brianpfeil.com/post/serverless-flask/</link>
<pubDate>Fri, 13 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-flask/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-flask-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-flask-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Example of running python &lt;a href=&#34;https://flask.palletsprojects.com/&#34;&gt;Flask&lt;/a&gt; app on Lambda + API Gateway via &lt;a href=&#34;https://www.serverless.com/&#34;&gt;serverless framework&lt;/a&gt;.  Based on &lt;a href=&#34;https://www.serverless.com/blog/flask-python-rest-api-serverless-lambda-dynamodb&#34;&gt;Build a Python REST API with Serverless, Lambda, and DynamoDB&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/guides/serverless-flask/serverless-flask-architecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.serverless.com/&#34;&gt;serverless framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3.8&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pypa/pipenv&#34;&gt;pipenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running&#34;&gt;Running&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ensure python venv loaded in shell&lt;/span&gt;
pipenv shell

&lt;span class=&#34;c1&#34;&gt;# install npm deps for serverless&lt;/span&gt;
npm install

&lt;span class=&#34;c1&#34;&gt;# run flash app locally.  server reloads on file change.  still need to refresh page in browser&lt;/span&gt;
npm run dev

&lt;span class=&#34;c1&#34;&gt;# deploy. (docker must be running to build python packages for linux target / lambda)&lt;/span&gt;
npm run deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.serverless.com/flask&#34;&gt;The Official Guide to Serverless Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.serverless.com/blog/flask-python-rest-api-serverless-lambda-dynamodb&#34;&gt;Build a Python REST API with Serverless, Lambda, and DynamoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Flask</title>
<link>https://brianpfeil.com/post/flask/</link>
<pubDate>Sat, 15 Feb 2020 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/flask/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/flask-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/flask-playground&lt;/a&gt;
&lt;/div&gt;
&lt;h1 id=&#34;flask-playground&#34;&gt;flask-playground&lt;/h1&gt;
&lt;p&gt;learn &lt;a href=&#34;https://www.palletsprojects.com/p/flask/&#34;&gt;flask&lt;/a&gt;, the python web application framework&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;server.py&#34;&gt;&lt;code&gt;server.py&lt;/code&gt;&lt;/a&gt; - flask server&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;client.py&#34;&gt;&lt;code&gt;client.py&lt;/code&gt;&lt;/a&gt; - http client.  uses &lt;code&gt;requests&lt;/code&gt; to POST the &lt;a href=&#34;image.jpeg&#34;&gt;&lt;code&gt;image.jpeg&lt;/code&gt;&lt;/a&gt; image file&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;load-test.sh&#34;&gt;&lt;code&gt;load-test.sh&lt;/code&gt;&lt;/a&gt; - load test via parallel requests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pipenv.kennethreitz.org/&#34;&gt;pipenv&lt;/a&gt; for python environment/packages&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running&#34;&gt;Running&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# install all dependencies&lt;/span&gt;
pipenv install --dev

&lt;span class=&#34;c1&#34;&gt;# load python enviroment&lt;/span&gt;
pipenv shell

&lt;span class=&#34;c1&#34;&gt;# run server in debug (livereload - reload on file changes) mode&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;FLASK_DEBUG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;FLASK_RUN_PORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;FLASK_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;server.py flask run

&lt;span class=&#34;c1&#34;&gt;# run client&lt;/span&gt;
python client.py

&lt;span class=&#34;c1&#34;&gt;# load test&lt;/span&gt;
chmod +x load-test.sh
./load-test.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
  </channel>
</rss>
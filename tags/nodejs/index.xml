<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nodejs on Brian Pfeil</title>
    <link>https://brianpfeil.com/tags/nodejs/</link>
    <description>Recent content in nodejs on Brian Pfeil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Mar 2015 19:06:15 +0000</lastBuildDate>
    
	<atom:link href="https://brianpfeil.com/tags/nodejs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dockerized Node.js App on Elastic Beanstalk Example</title>
      <link>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/</link>
      <pubDate>Wed, 25 Mar 2015 19:06:15 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/</guid>
      <description>Example of developing and deploying a dockerized Node.js app to Elastic Beanstalk
 source on Github at pfeilbr/Elastic-Beanstalk-Docker-Node.js-Example
 Local Development Workflow   Edit code. e.g. index.js
  Build image
$ docker build --tag=&amp;quot;pfeilbr/eb-docker-node-example&amp;quot; . ``
  Run
$ docker run -p 80:80 -it -rm -name eb-docker-node-example pfeilbr/eb-docker-node-example ``
  Get docker host ip (optional. only if using boot2docker)
$ boot2docker ip ``
  Open browser to http://&amp;lt;boot2docker ip&amp;gt;</description>
    </item>
    
    <item>
      <title>Dockerized Node.js App on Elastic Beanstalk Example</title>
      <link>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/dockerized-nodejs-app-on-elastic-beanstalk-example/</link>
      <pubDate>Wed, 25 Mar 2015 19:06:15 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/dockerized-nodejs-app-on-elastic-beanstalk-example/dockerized-nodejs-app-on-elastic-beanstalk-example/</guid>
      <description>Example of developing and deploying a dockerized Node.js app to Elastic Beanstalk
 source on Github at pfeilbr/Elastic-Beanstalk-Docker-Node.js-Example
 Local Development Workflow   Edit code. e.g. index.js
  Build image
$ docker build --tag=&amp;quot;pfeilbr/eb-docker-node-example&amp;quot; . ``
  Run
$ docker run -p 80:80 -it -rm -name eb-docker-node-example pfeilbr/eb-docker-node-example ``
  Get docker host ip (optional. only if using boot2docker)
$ boot2docker ip ``
  Open browser to http://&amp;lt;boot2docker ip&amp;gt;</description>
    </item>
    
    <item>
      <title>Cross-platform Desktop Apps with NW.js</title>
      <link>https://brianpfeil.com/post/cross-platform-desktop-apps-with-nw-js/</link>
      <pubDate>Sun, 15 Feb 2015 11:22:57 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/cross-platform-desktop-apps-with-nw-js/</guid>
      <description>Post is based on the pfeilbr/nwjs-playground project.
 NW.js Playground Project to learn and experiment with NW.js.
NW.js enables the creation of cross platform desktop applications. Your UI is built with standard html, js, and css technologies. Access to the underlying desktop OS capabilites are provided by giving you access to node.js. You can use the Node.js core modules plus any of the 3rd party NPM modules;
Installing NW.js Download and unpack nwjs app for your platform from http://nwjs.</description>
    </item>
    
  </channel>
</rss>
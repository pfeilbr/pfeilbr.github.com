<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>serverless on Brian Pfeil</title>
        <link>https://brianpfeil.com/tags/serverless/</link>
        <description>Recent content in serverless on Brian Pfeil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 25 Jan 2021 00:00:00 -0500</lastBuildDate><atom:link href="https://brianpfeil.com/tags/serverless/index.xml" rel="self" type="application/rss+xml" />
    <item>
<title>Azure Functions</title>
<link>https://brianpfeil.com/post/azure-functions/</link>
<pubDate>Mon, 25 Jan 2021 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/azure-functions/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/azure-functions-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/azure-functions-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions&#34;&gt;azure functions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Following is based on &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/create-first-function-cli-node?tabs=azure-cli%2Cbrowser&#34;&gt;Create a JavaScript function from the command line - Azure Functions&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# create nodejs function project&lt;/span&gt;
func init LocalFunctionProj --javascript

&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; LocalFunctionProj

&lt;span class=&#34;c1&#34;&gt;# create new function trigger via http request&lt;/span&gt;
func new --name HttpExample --template &lt;span class=&#34;s2&#34;&gt;&amp;#34;HTTP trigger&amp;#34;&lt;/span&gt; --authlevel &lt;span class=&#34;s2&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# start locally&lt;/span&gt;
func start

&lt;span class=&#34;c1&#34;&gt;# make request against local endpoint&lt;/span&gt;
curl http://localhost:7071/api/HttpExample?name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Brian

&lt;span class=&#34;c1&#34;&gt;# create resource group&lt;/span&gt;
az group create --name &lt;span class=&#34;s2&#34;&gt;&amp;#34;AzureFunctionsQuickstart-rg&amp;#34;&lt;/span&gt; --location &lt;span class=&#34;s2&#34;&gt;&amp;#34;eastus&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# create storage account&lt;/span&gt;
az storage account create --name &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmystorage01&amp;#34;&lt;/span&gt; --location &lt;span class=&#34;s2&#34;&gt;&amp;#34;eastus&amp;#34;&lt;/span&gt; --resource-group &lt;span class=&#34;s2&#34;&gt;&amp;#34;AzureFunctionsQuickstart-rg&amp;#34;&lt;/span&gt; --sku &lt;span class=&#34;s2&#34;&gt;&amp;#34;Standard_LRS&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# create function app in azure&lt;/span&gt;
az functionapp create --resource-group &lt;span class=&#34;s2&#34;&gt;&amp;#34;AzureFunctionsQuickstart-rg&amp;#34;&lt;/span&gt; --consumption-plan-location &lt;span class=&#34;s2&#34;&gt;&amp;#34;eastus&amp;#34;&lt;/span&gt; --runtime &lt;span class=&#34;s2&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt; --runtime-version &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt; --functions-version &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; --name &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmyfn01&amp;#34;&lt;/span&gt; --storage-account &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmystorage01&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# deploy&lt;/span&gt;
func azure functionapp publish &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmyfn01&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# invoke function on azure&lt;/span&gt;
curl &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://brianpfeilmyfn01.azurewebsites.net/api/httpexample?name=Brianv2&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# view near real-time streaming logs&lt;/span&gt;
func azure functionapp logstream &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmyfn01&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# fetch the app settings.  this populates them in `local.settings.json`&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# credentials for the storage account are stored in the `AzureWebJobsStorage` property&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# this is needed to store message in storage queue&lt;/span&gt;
func azure functionapp fetch-app-settings &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmyfn01&amp;#34;&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Show settings for a function app. (autogenerated)&lt;/span&gt;
az functionapp config appsettings list --name &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmyfn01&amp;#34;&lt;/span&gt; --resource-group &lt;span class=&#34;s2&#34;&gt;&amp;#34;AzureFunctionsQuickstart-rg&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Update a function app&amp;#39;s settings. (autogenerated)&lt;/span&gt;
az functionapp config appsettings &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; --name &lt;span class=&#34;s2&#34;&gt;&amp;#34;brianpfeilmyfn01&amp;#34;&lt;/span&gt; --resource-group &lt;span class=&#34;s2&#34;&gt;&amp;#34;AzureFunctionsQuickstart-rg&amp;#34;&lt;/span&gt; --settings &lt;span class=&#34;s2&#34;&gt;&amp;#34;AzureWebJobsStorage=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$storageConnectionString&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# list available function templates for javascript&lt;/span&gt;
func templates list -l javascript

&lt;span class=&#34;c1&#34;&gt;# create new function using &amp;#34;Durable Functions HTTP starter&amp;#34; template&lt;/span&gt;
func new -t &lt;span class=&#34;s2&#34;&gt;&amp;#34;Durable Functions HTTP starter&amp;#34;&lt;/span&gt; -l javascript -n DurableFunctionsHTTPstarter

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;message(s) in the azure storage queue&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAF4oT5-alVJf4FWuRgwVkGfjNm54yVrwBQB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Managed Identity for Function in Azure Console&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAGjYBDl3URJ5JbtST8xTEQgGbSTSlwrGWoB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;app settings can be access via environment variables.  See &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-how-to-use-azure-function-app-settings?tabs=azurecli#settings&#34;&gt;Configure function app settings in Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://azure.microsoft.com/en-us/updates/general-availability-of-key-vault-references-in-app-service-and-azure-functions/&#34;&gt;Key Vault references&lt;/a&gt; to store secrets stored in Key Vault.  They are automatically fetched and provided as environment variables to your function.
&lt;ul&gt;
&lt;li&gt;see &lt;a href=&#34;https://zimmergren.net/azure-functions-key-vault-reference-azurewebjobsstorage/&#34;&gt;Secure App Settings variables in Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;e.g. App Settings Value KeyVault Reference &lt;code&gt;@Microsoft.KeyVault(SecretUri=https://pfeilkeyvault01.vault.azure.net/secrets/secret01/e0fca4271fb243178a0a861d8e6fbc59)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Functions have in/out &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings?tabs=csharp&#34;&gt;bindings&lt;/a&gt; defined in &lt;a href=&#34;LocalFunctionProj/HttpExample/function.json&#34;&gt;&lt;code&gt;function.json&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To access other azure resources/services from a function, you configure a &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/app-service/overview-managed-identity?tabs=dotnet&#34;&gt;managed identity&lt;/a&gt; on the function app and provide access to Azure resources for that identity using Azure role-based access control.  See &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/services-support-managed-identities&#34;&gt;Azure Services that support managed identities - Azure AD&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;system-assigned managed identity - identity tied to and managed by a specific service.  when that service instance is deleted, the identity is deleted with it.&lt;/li&gt;
&lt;li&gt;user-assigned managed identity - not owned by a specific service.  lifecycle is fully managed by you.  can be assigned to multiple services.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/durable/&#34;&gt;Azure Durable Functions documentation&lt;/a&gt; - lets you write stateful functions in a serverless compute environment.  Similar to AWS Step Functions, but implemented as language level library.&lt;/li&gt;
&lt;li&gt;shared access signature (SAS) URLs for granting limited access.  Similar to S3 signed URLs.  See &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview&#34;&gt;Grant limited access to data with shared access signatures (SAS) - Azure Storage&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;A shared access signature is a signed URI that points to one or more storage resources. The URI includes a token that contains a special set of query parameters. The token indicates how the resources may be accessed by the client. One of the query parameters, the signature, is constructed from the SAS parameters and signed with the key that was used to create the SAS. This signature is used by Azure Storage to authorize access to the storage resource.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings?tabs=csharp&#34;&gt;Triggers and bindings in Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/create-first-function-cli-node?tabs=azure-cli%2Cbrowser&#34;&gt;Create a JavaScript function from the command line - Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale&#34;&gt;Azure Functions scale and hosting&lt;/a&gt; - covers limits and constraints&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/samples/azure-samples/functions-storage-managed-identity/using-managed-identity-between-azure-functions-and-azure-storage/&#34;&gt;Using Managed Identity between Azure Functions and Azure Storage - Code Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/app-service/overview-managed-identity&#34;&gt;How to use managed identities for App Service and Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-how-to-use-azure-function-app-settings?tabs=azurecli#settings&#34;&gt;Configure function app settings in Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zimmergren.net/azure-functions-key-vault-reference-azurewebjobsstorage/&#34;&gt;Secure App Settings variables in Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/app-service/app-service-key-vault-references#source-application-settings-from-key-vault&#34;&gt;Source Application Settings from Key Vault&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Serverless Flask</title>
<link>https://brianpfeil.com/post/serverless-flask/</link>
<pubDate>Fri, 13 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-flask/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-flask-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-flask-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Example of running python &lt;a href=&#34;https://flask.palletsprojects.com/&#34;&gt;Flask&lt;/a&gt; app on Lambda + API Gateway via &lt;a href=&#34;https://www.serverless.com/&#34;&gt;serverless framework&lt;/a&gt;.  Based on &lt;a href=&#34;https://www.serverless.com/blog/flask-python-rest-api-serverless-lambda-dynamodb&#34;&gt;Build a Python REST API with Serverless, Lambda, and DynamoDB&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/guides/serverless-flask/serverless-flask-architecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.serverless.com/&#34;&gt;serverless framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3.8&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pypa/pipenv&#34;&gt;pipenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running&#34;&gt;Running&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ensure python venv loaded in shell&lt;/span&gt;
pipenv shell

&lt;span class=&#34;c1&#34;&gt;# install npm deps for serverless&lt;/span&gt;
npm install

&lt;span class=&#34;c1&#34;&gt;# run flash app locally.  server reloads on file change.  still need to refresh page in browser&lt;/span&gt;
npm run dev

&lt;span class=&#34;c1&#34;&gt;# deploy. (docker must be running to build python packages for linux target / lambda)&lt;/span&gt;
npm run deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.serverless.com/flask&#34;&gt;The Official Guide to Serverless Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.serverless.com/blog/flask-python-rest-api-serverless-lambda-dynamodb&#34;&gt;Build a Python REST API with Serverless, Lambda, and DynamoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>AWS Serverless Feedback</title>
<link>https://brianpfeil.com/post/aws-serverless-feedback/</link>
<pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/aws-serverless-feedback/</guid>
<description>&lt;p&gt;Feedback on serverless usage on AWS.  Based on working with and observations of the teams that leverage the set of AWS &amp;ldquo;serverless&amp;rdquo; services.  Feedback format is &lt;strong&gt;Challenge&lt;/strong&gt; and &lt;strong&gt;Suggestion&lt;/strong&gt; for a given topic, concept, service, or feature.&lt;/p&gt;
&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#serverless-at-aws-general&#34;&gt;Serverless at AWS: General&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-skill-set--developer-accessibility&#34;&gt;Challenge: Skill Set / Developer Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-skill-set--developer-accessibility&#34;&gt;Suggestion: Skill Set / Developer Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-developer-experience-dx&#34;&gt;Challenge: Developer Experience (DX)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-developer-experience-dx&#34;&gt;Suggestion: Developer Experience (DX)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-cost-forecasting&#34;&gt;Challenge: Cost Forecasting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-cost-forecasting&#34;&gt;Suggestion: Cost Forecasting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-non-aws-core-enterprise-tools&#34;&gt;Challenge: Non-AWS Core Enterprise Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-non-aws-core-enterprise-tools&#34;&gt;Suggestion: Non-AWS Core Enterprise Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iam&#34;&gt;IAM&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-skill-set--developer-accessibility-1&#34;&gt;Challenge: Skill Set / Developer Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-skill-set--developer-accessibility-1&#34;&gt;Suggestion: Skill Set / Developer Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cloudformation&#34;&gt;CloudFormation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-deployment-time&#34;&gt;Challenge: Deployment Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-deployment-time&#34;&gt;Suggestion: Deployment Time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lambda&#34;&gt;Lambda&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-lambda-or-container-decision&#34;&gt;Challenge: Lambda or Container Decision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-faas-or-container-decision&#34;&gt;Suggestion: FaaS or Container Decision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-cost-vs-performance-tuning&#34;&gt;Challenge: Cost vs. Performance Tuning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-cost-vs-performance-tuning&#34;&gt;Suggestion: Cost vs. Performance Tuning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dynamodb&#34;&gt;DynamoDB&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-learning-curve&#34;&gt;Challenge: Learning Curve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-learning-curve&#34;&gt;Suggestion: Learning Curve&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#amplify-cli&#34;&gt;Amplify CLI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-enterprise-support&#34;&gt;Challenge: Enterprise Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-enterprise-support&#34;&gt;Suggestion: Enterprise Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-uncomfortable-level-of-magic&#34;&gt;Challenge: Uncomfortable Level of Magic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-uncomfortable-level-of-magic&#34;&gt;Suggestion: Uncomfortable Level of Magic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#appsync&#34;&gt;AppSync&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-graphql-centered-development-learning-curve&#34;&gt;Challenge: GraphQL Centered Development Learning Curve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-graphql-centered-development-learning-curve&#34;&gt;Suggestion: GraphQL Centered Development Learning Curve&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#api-gateway&#34;&gt;API Gateway&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-limited-service-support-for-http-api---aws-service-integrations&#34;&gt;Challenge: Limited Service Support for HTTP API -&amp;gt; AWS Service Integrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-limited-service-support-for-http-api---aws-service-integrations&#34;&gt;Suggestion: Limited Service Support for HTTP API -&amp;gt; AWS Service Integrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-vtl-mapping-templates&#34;&gt;Challenge: VTL Mapping Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-vtl-mapping-templates&#34;&gt;Suggestion: VTL Mapping Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#eventbridge&#34;&gt;EventBridge&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-security-model&#34;&gt;Challenge: Security Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-security-model&#34;&gt;Suggestion: Security Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-observability&#34;&gt;Challenge: Observability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-observability&#34;&gt;Suggestion: Observability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-real-time-and-high-volume-event-rates&#34;&gt;Challenge: Real-time and High Volume Event Rates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-real-time-and-high-volume-event-rates&#34;&gt;Suggestion: Real-time and High Volume Event Rates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#x-ray&#34;&gt;X-Ray&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-effort-to-enable&#34;&gt;Challenge: Effort to Enable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-effort-to-enable&#34;&gt;Suggestion: Effort to Enable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aws-serverless-application-model-sam&#34;&gt;AWS Serverless Application Model (SAM)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#challenge-infrastructure-resource-to-code-locality&#34;&gt;Challenge: Infrastructure Resource to Code Locality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#suggestion-infrastructure-resource-to-code-locality&#34;&gt;Suggestion: Infrastructure Resource to Code Locality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;serverless-at-aws-general&#34;&gt;Serverless at AWS: General&lt;/h2&gt;
&lt;h3 id=&#34;challenge-skill-set--developer-accessibility&#34;&gt;Challenge: Skill Set / Developer Accessibility&lt;/h3&gt;
&lt;p&gt;Serverless skill set has less to do with coding and more knowing the capabilities of each service and how they can be integrated and composed together.  The role of the architect becomes central to building effective serverless solutions.  This is increasingly so, because the integrations between services are trending more towards configuration over code.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Traditional&amp;rdquo; application developers see the next step as containers because it&amp;rsquo;s familiar / closer to what they&amp;rsquo;re used to (long-lived processes running on an OS vs. a transient run-time environment).  It&amp;rsquo;s hard to make the leap directly to serverless and bypass the containers and k8s space.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-skill-set--developer-accessibility&#34;&gt;Suggestion: Skill Set / Developer Accessibility&lt;/h3&gt;
&lt;p&gt;This is where education / resources / etc. are the main tools.  Continue and accelerate the creation of content on the AWS blogs, twitch channel, youtube channels, podcasts, Developer Advocates on social media, etc.&lt;/p&gt;
&lt;p&gt;Amplify suite of tools and services is helping in this area for easing the on-boarding those new to serverless development on AWS.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-developer-experience-dx&#34;&gt;Challenge: Developer Experience (DX)&lt;/h3&gt;
&lt;p&gt;The path to &amp;ldquo;serverless&amp;rdquo; adoption has shifted from the foundational technologies being in place to improving developer experience.  Everyone is sold on serverless being the right thing, now it&amp;rsquo;s enabling it&amp;rsquo;s usage and making accessible to the huge pool of developers who only have experience with &amp;ldquo;traditional&amp;rdquo; application development.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-developer-experience-dx&#34;&gt;Suggestion: Developer Experience (DX)&lt;/h3&gt;
&lt;p&gt;SAM and Amplify tooling are quickly addressing the gaps.  Accelerate what&amp;rsquo;s already being done.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-cost-forecasting&#34;&gt;Challenge: Cost Forecasting&lt;/h3&gt;
&lt;p&gt;Currently difficult to estimate cost with serverless solutions because usually composed of many services.  It&amp;rsquo;s a good deal of effort to understand all the cost contributing dimensions across all the used services.  Then assemble.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-cost-forecasting&#34;&gt;Suggestion: Cost Forecasting&lt;/h3&gt;
&lt;p&gt;An &amp;ldquo;Cost Profiler&amp;rdquo; feature by exercising a solution while &amp;ldquo;recording&amp;rdquo; it, then extrapolating to give a cost per &amp;ldquo;user&amp;rdquo; transaction / time (for sustained transactions) / etc..  &amp;ldquo;Cost Profiler&amp;rdquo; similar to a performance profiler.&lt;/p&gt;
&lt;p&gt;This has similarities and maybe could leverage X-Ray distributed traces + the already captured default CloudWatch metrics per service.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-non-aws-core-enterprise-tools&#34;&gt;Challenge: Non-AWS Core Enterprise Tools&lt;/h3&gt;
&lt;p&gt;Building an effective CI/CD pipeline at a large enterprise involves leveraging non-AWS already established tooling. For example, Bitbucket, Jenkins, and Artifactory.&lt;/p&gt;
&lt;p&gt;This leads to &amp;ldquo;lowest common denominator&amp;rdquo; pipelines that don&amp;rsquo;t meet the vision of CI/CD.  They are dependant on the availability of adapters/integrations/etc. for specific clouds that the cloud agnostic tools provide.&lt;/p&gt;
&lt;p&gt;AWS has a corresponding solution for each of these that eases building a CI/CD pipeline when the target is AWS.  Integrated security via IAM threaded through all the service interactions is the biggest win as security is usually the sticking point.  We lose &amp;ldquo;potential&amp;rdquo; value as a result of using these non-AWS equivalents over the flexibility it provides the company to support it&amp;rsquo;s current multi-cloud (aws,azure,gcp, etc.) position.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-non-aws-core-enterprise-tools&#34;&gt;Suggestion: Non-AWS Core Enterprise Tools&lt;/h3&gt;
&lt;p&gt;This is driven by the &amp;ldquo;non all-in&amp;rdquo; stance of many large enterprises for multi-cloud.  More education in this area about explicitly acknowledging a single cloud approach for &lt;em&gt;given enterprise areas&lt;/em&gt;, and understanding and documenting the cost to switch to a different cloud is enough to mitigate the &amp;ldquo;perceived&amp;rdquo; risk.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;iam&#34;&gt;IAM&lt;/h2&gt;
&lt;h3 id=&#34;challenge-skill-set--developer-accessibility-1&#34;&gt;Challenge: Skill Set / Developer Accessibility&lt;/h3&gt;
&lt;p&gt;Security is inherently hard and involves many complex entities and their relationships.  To be effective and successful on AWS, a customer needs to know this.  This is table stakes.  IAM continues to be the largest barrier to entry I see with AWS users.  It is necessary and robust, but a new concept to &amp;ldquo;traditional&amp;rdquo; developers.  The closest thing to it that many devs have experience with is RDBMS permissions.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-skill-set--developer-accessibility-1&#34;&gt;Suggestion: Skill Set / Developer Accessibility&lt;/h3&gt;
&lt;p&gt;AWS is leveraging Amplify suite as an on-boarding mechanism for those new to AWS.  It currently &amp;ldquo;handles&amp;rdquo; all the IAM concerns via automation / codegen / etc.  Maybe helpful to add features that allow developers to take more ownership in this area.  Similar to what SAM CLI does with &lt;a href=&#34;https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html&#34;&gt;AWS SAM Policy Templates&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloudformation&#34;&gt;CloudFormation&lt;/h2&gt;
&lt;h3 id=&#34;challenge-deployment-time&#34;&gt;Challenge: Deployment Time&lt;/h3&gt;
&lt;p&gt;A challenge I&amp;rsquo;ve observed with serverless development, is slowed down iterative workflow due to the length of time it takes for a CloudFormation deployment to run.  Developers are used to live reload level of speed to see dev changes reflected back to them.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-deployment-time&#34;&gt;Suggestion: Deployment Time&lt;/h3&gt;
&lt;p&gt;Faster deployment times :)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;lambda&#34;&gt;Lambda&lt;/h2&gt;
&lt;h3 id=&#34;challenge-lambda-or-container-decision&#34;&gt;Challenge: Lambda or Container Decision&lt;/h3&gt;
&lt;p&gt;Lambda has grown to have a lot of features and configuration options.  Lambda feature set is converging towards Fargate and vice versa.  There is already a decision to be made on which to choose.  This convergence could make it even more unclear which to pick.  Or if one goes away and they are merged, the migration path.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-lambda-or-container-decision&#34;&gt;Suggestion: Lambda or Container Decision&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;More tools similar to &lt;a href=&#34;https://aws.amazon.com/architecture/well-architected/&#34;&gt;Well-Architected&lt;/a&gt; to help decide.&lt;/li&gt;
&lt;li&gt;Converge Lambda and Container functionality into single service&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-cost-vs-performance-tuning&#34;&gt;Challenge: Cost vs. Performance Tuning&lt;/h3&gt;
&lt;p&gt;The external community has solutions such as lambda power tuning to automate finding the right compute/memory configuration for a given applications priority balance between performance and cost.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-cost-vs-performance-tuning&#34;&gt;Suggestion: Cost vs. Performance Tuning&lt;/h3&gt;
&lt;p&gt;AWS has all the information and metrics about the container environment through the duration of the run.  Would be nice to have this as a service.  Maybe &amp;ldquo;Lambda tuning suggestions&amp;rdquo; that is purely informational and someone has to take action to apply configuration changes.  This helps customers, but AWS also with it&amp;rsquo;s own efficiency goals via underlying resource scheduling (e.g. scheduling, workload placement, container packing, etc.)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dynamodb&#34;&gt;DynamoDB&lt;/h2&gt;
&lt;h3 id=&#34;challenge-learning-curve&#34;&gt;Challenge: Learning Curve&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;the default serverless database.&lt;/li&gt;
&lt;li&gt;NoSQL does not have standards like the RDBMS and extended SQL family.  You are learning an AWS specific DB and how to interact with it via an API.  * There is no smoothing / accessibility layer like SQL.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a DB where to use effectively, you need to learn it.  I&amp;rsquo;ve observed devs try to lean on language/library/framework ORMs, but that only gets them so far.  In order to dev, debug, deploy, operationalize, and troubleshoot it, you need to learn it.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-learning-curve&#34;&gt;Suggestion: Learning Curve&lt;/h3&gt;
&lt;p&gt;Continue with tools like &lt;a href=&#34;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/workbench.html&#34;&gt;NoSQL Workbench for DynamoDB GUI Client&lt;/a&gt; and education resources.&lt;/p&gt;
&lt;p&gt;There is a lot of content on single table vs. multi-table design for a single application.  I&amp;rsquo;ve observed developers go down the &amp;ldquo;expert&amp;rdquo; path of single table design, but once it was operational and had to be supported, the support team has to learn the &amp;ldquo;advanced&amp;rdquo; single table concepts.  They made errors, etc., and we eventually split into multi-table design because it was more supportable.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;amplify-cli&#34;&gt;Amplify CLI&lt;/h2&gt;
&lt;h3 id=&#34;challenge-enterprise-support&#34;&gt;Challenge: Enterprise Support&lt;/h3&gt;
&lt;p&gt;Amplify in it&amp;rsquo;s current form poses some challenges for use in enterprises.  This is due to the amount of automation around the creation of IAM resource types on behalf of the developer.  You need a large set of permissions to use including those to create new IAM resource types, which becomes an application partitioning/firewalling issue in shared accounts in addition to the increased security concerns around IAM.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-enterprise-support&#34;&gt;Suggestion: Enterprise Support&lt;/h3&gt;
&lt;p&gt;Add various IAM role/policy/etc. parameters to configure.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s aim to stay simple for the target audience may make this extra/advanced usage an product impedance mismatch, and therefore out of scope for the product.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-uncomfortable-level-of-magic&#34;&gt;Challenge: Uncomfortable Level of Magic&lt;/h3&gt;
&lt;p&gt;Amplify CLI is making AWS more accessible to &amp;ldquo;traditional&amp;rdquo; developers.  Makes it really easy to get started by automating all of the resource provisioning pieces.  Once you need to go outside the &amp;ldquo;happy path&amp;rdquo; / debug / troubleshoot / deal with IAM, etc., devs need to understand these concepts.  The amount of infrastructure code and source code it generates for the developer has the &amp;ldquo;feel&amp;rdquo; of too much magic.  All those extra artifacts that get checked into the repo makes it &amp;ldquo;feel&amp;rdquo; prone to breakage as the CLI evolves.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-uncomfortable-level-of-magic&#34;&gt;Suggestion: Uncomfortable Level of Magic&lt;/h3&gt;
&lt;p&gt;To address the users that want to break out of &amp;ldquo;beginner&amp;rdquo; mode on rails, and take more control of resource provisioning, allow the one-way &amp;ldquo;ejection&amp;rdquo; from Amplify CLI to SAM CLI.  Similar to what &lt;a href=&#34;https://create-react-app.dev/docs/available-scripts#npm-run-eject&#34;&gt;create-react-app | npm run eject&lt;/a&gt;.  This enables a natural learning and skills transition for devs to take on and understand more AWS concepts, and therefore more effective us of the AWS platform.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;appsync&#34;&gt;AppSync&lt;/h2&gt;
&lt;h3 id=&#34;challenge-graphql-centered-development-learning-curve&#34;&gt;Challenge: GraphQL Centered Development Learning Curve&lt;/h3&gt;
&lt;p&gt;Great service and there are clear benefits to graphql centric development.&lt;/p&gt;
&lt;p&gt;There is a necessary steep learning curve inherent to graphql.  Many &amp;ldquo;new&amp;rdquo; concepts for devs to learn.  API, Schema, DataSource, Resolver, Resolver Function, Resolver Pipeline.  New graphql schema language to learn, and to use effectively, AWS specific schema directives.&lt;/p&gt;
&lt;p&gt;Feels vendor lockin-y, but traded for the auto provisioned DB, configurable security (e.g. Cognito UserPools), generated client side code.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-graphql-centered-development-learning-curve&#34;&gt;Suggestion: GraphQL Centered Development Learning Curve&lt;/h3&gt;
&lt;p&gt;Looking at other tech of the past and their evolution, community standardization around GraphQL managed services would be the next likely step.  The value AppSync provides is much more than graphql itself.  It builds on the benefit of the schema via tooling like Amplify CLI for strong typing, auto provision storage backend (AWS graphql directives), client-side code generation, etc.  All these things are AWS specific and don&amp;rsquo;t yet have standards or a generalized community name.  Maybe they never will, and it&amp;rsquo;s similar to DynamoDB as a unique &lt;strong&gt;only at AWS cloud differentiating super-service&lt;/strong&gt;, but if not, AWS could be a part of that future body and drive standardization along with other cloud vendors.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;api-gateway&#34;&gt;API Gateway&lt;/h2&gt;
&lt;h3 id=&#34;challenge-limited-service-support-for-http-api---aws-service-integrations&#34;&gt;Challenge: Limited Service Support for HTTP API -&amp;gt; AWS Service Integrations&lt;/h3&gt;
&lt;p&gt;HTTP API -&amp;gt; AWS Service Integrations are great for simplified and removing lambda as a simple glue layer.  There is currently a limited set of services supported.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-limited-service-support-for-http-api---aws-service-integrations&#34;&gt;Suggestion: Limited Service Support for HTTP API -&amp;gt; AWS Service Integrations&lt;/h3&gt;
&lt;p&gt;Keep the momentum with adding service support.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-vtl-mapping-templates&#34;&gt;Challenge: VTL Mapping Templates&lt;/h3&gt;
&lt;p&gt;I have observed with developers I&amp;rsquo;ve worked with that VTL mapping templates cause a lot of confusion.  Should they become a expert at VTL and put the logic to transform a payload in it?  Another legacy language to learn that has limited returns on investment.  Should they just do it in lambda with a language they are familiar with?  It &amp;ldquo;feels&amp;rdquo; like it&amp;rsquo;s something that should not be exposed to customer and only used internally.  The Java-ness heritage of verbosity, and yet another language to learn and know, is an implementation detail/concern being surfaced to the customer.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-vtl-mapping-templates&#34;&gt;Suggestion: VTL Mapping Templates&lt;/h3&gt;
&lt;p&gt;Phase out / deprecate usage.  Introduce a way to express via simplified, declarative only (no control constructs trying to be a general purpose programming language), yaml/json.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;eventbridgehttpsawsamazoncomeventbridge&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/eventbridge/&#34;&gt;EventBridge&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;EventBridge seems like it&amp;rsquo;s on the way to being a centerpiece service of serverless solutions.  As core to serverless as lambda is.&lt;/p&gt;
&lt;h3 id=&#34;challenge-security-model&#34;&gt;Challenge: Security Model&lt;/h3&gt;
&lt;p&gt;The security model around events &amp;ldquo;feels&amp;rdquo; a bit off at the moment.  It almost feels like it&amp;rsquo;s bypassing security.  If I can subscribe to events on a given bus, especially &amp;ldquo;default&amp;rdquo; account bus, I can access information coming from a whole host of services.  It similar to the sensitivity at which CloudTrail requires.  This sensitivity means more concerns around security, which limits adoption.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-security-model&#34;&gt;Suggestion: Security Model&lt;/h3&gt;
&lt;p&gt;It is covered by &lt;a href=&#34;https://docs.aws.amazon.com/eventbridge/latest/userguide/policy-keys-eventbridge.html&#34;&gt;IAM Policy Conditions&lt;/a&gt;, but it doesn&amp;rsquo;t feel like first class support.  Less than ideal DX.  IAM policy conditions is an already overloaded mechanism where concepts that don&amp;rsquo;t cleanly fit into the Resources and Actions entity concepts are put.&lt;/p&gt;
&lt;p&gt;The naive answer would be a new IAM concept, like &amp;ldquo;Events&amp;rdquo; and corresponding &amp;ldquo;Producers&amp;rdquo; and &amp;ldquo;Consumers&amp;rdquo; (Actions, Resources, Events, Producers, Consumers and Condition Keys for AWS Services).  Similar to Resources, Events could benefit from first class IAM entity concepts like Events, Producers, Consumers to align with developer expectations around event based systems.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-observability&#34;&gt;Challenge: Observability&lt;/h3&gt;
&lt;p&gt;Events in general are challenging when it comes to observability.  EventBridge is no different.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-observability&#34;&gt;Suggestion: Observability&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;event retention per bus.  similar to kinesis 7 day max.&lt;/li&gt;
&lt;li&gt;native event replay / event time travel to help with dev debugging, app state transitions, event schema evolution.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;challenge-real-time-and-high-volume-event-rates&#34;&gt;Challenge: Real-time and High Volume Event Rates&lt;/h3&gt;
&lt;p&gt;Also some hook into the trend of client-side event based state solutions feels natural for EventBridge (e.g. &lt;a href=&#34;https://react-redux.js.org/&#34;&gt;React Redux&lt;/a&gt;).  Maybe it&amp;rsquo;s in the form of a library that fits into Amplify since it&amp;rsquo;s aligned to client-side web and mobile tech.&lt;/p&gt;
&lt;p&gt;Given events in many systems can be high volume and high rates, exposing a native websocket API for the publishing and consumption of events would be helpful.  There are already projects in the community doing this, which validates the need for it.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-real-time-and-high-volume-event-rates&#34;&gt;Suggestion: Real-time and High Volume Event Rates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;native websocket api for high volume and real-time without having the added complexity of AppSync or API Gateway.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;x-rayhttpsawsamazoncomxray&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/xray/&#34;&gt;X-Ray&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;challenge-effort-to-enable&#34;&gt;Challenge: Effort to Enable&lt;/h3&gt;
&lt;p&gt;Observability and distributed tracing is required for almost any serverless solution since there are many services involved.  This is the &amp;ldquo;serverless&amp;rdquo; version of a &amp;ldquo;traditional&amp;rdquo; stack trace and/or local application log.  These are essential tools for developers.&lt;/p&gt;
&lt;p&gt;The following are friction points with the service:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instrumenting code with the x-ray sdk&lt;/li&gt;
&lt;li&gt;configuring to turn on/off in different way for each service &lt;em&gt;that supports it&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;having to understand and make decisions around sampling rates&lt;/li&gt;
&lt;li&gt;learning each services equivalent of a header to put a correlation/trace id in that doesn&amp;rsquo;t interfere with the &amp;ldquo;core&amp;rdquo; payload, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;suggestion-effort-to-enable&#34;&gt;Suggestion: Effort to Enable&lt;/h3&gt;
&lt;p&gt;Ideally it would be on by default across all services, baked into each services pricing, and the customer would not have the choice to turn off.  These are plumbing level, distributed systems, &amp;ldquo;undifferentiated heavy lifting&amp;rdquo; types of concerns.  The ones AWS is best at handling.&lt;/p&gt;
&lt;p&gt;The view is that aws runs all the services, and I as the customer shouldn&amp;rsquo;t need to do anything, but use the services to get this visibility.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;aws-serverless-application-model-samhttpsawsamazoncomserverlesssam&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/serverless/sam/&#34;&gt;AWS Serverless Application Model (SAM)&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;challenge-infrastructure-resource-to-code-locality&#34;&gt;Challenge: Infrastructure Resource to Code Locality&lt;/h3&gt;
&lt;p&gt;The linkage from a SAM template to local code via a directory path/s3 location/etc. suffers the locality of code problem.  Infrastructure and code are clearly separated (you can do inline code up to char limit), when it should be converging and feel natural.  A future state being infrastructure usage as part of a solution feels like a first class concept of the language or a library where you offload language level single process control constructs to infrastructure that is distributed, scalable, and elastic (e.g. step fn, EventBridge, SNS, SQS, etc.).  To the point where I&amp;rsquo;m not thinking about the infrastructure at all.  I only express it through code.  Has a feeling of &amp;ldquo;shifting gears&amp;rdquo;.&lt;/p&gt;
&lt;h3 id=&#34;suggestion-infrastructure-resource-to-code-locality&#34;&gt;Suggestion: Infrastructure Resource to Code Locality&lt;/h3&gt;
&lt;p&gt;With the introduction of the &lt;a href=&#34;https://aws.amazon.com/cdk/&#34;&gt;CDK&lt;/a&gt;, the lines between application code and infrastructure provisioning code is merging.  This &amp;ldquo;feels&amp;rdquo; like the more natural path for SAM to adopt the CDK style.&lt;/p&gt;
&lt;p&gt;If you extend CDK to the next level of evolution in abstraction, it&amp;rsquo;s a cloud specific programming language.  Infrastructure as a whole is &amp;ldquo;undifferentiated heavy lifting&amp;rdquo; and not of concern to an end user of a solution.  A current means to an end.  Something like &amp;ldquo;CloudScript&amp;rdquo;?, but already taken by MS :)&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Serverless Architecture: Key Service Considerations</title>
<link>https://brianpfeil.com/post/serverless-architecture-key-considerations-per-service/</link>
<pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-architecture-key-considerations-per-service/</guid>
<description>&lt;p&gt;A serverless architecture is &amp;ldquo;typically&amp;rdquo; composed of many services.  The following
covers the key considerations and configuration options for the &lt;em&gt;most common&lt;/em&gt; AWS services leveraged for serverless architectures.&lt;/p&gt;
&lt;hr&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#relevant-patterns&#34;&gt;Relevant Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lambda&#34;&gt;Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sns&#34;&gt;SNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sqs&#34;&gt;SQS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#kinesis&#34;&gt;Kinesis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#eventbridge&#34;&gt;EventBridge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dynamodb&#34;&gt;DynamoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#step-functions&#34;&gt;Step Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#api-gateway&#34;&gt;API Gateway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cloudfront&#34;&gt;CloudFront&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#route53&#34;&gt;Route53&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#global-accelerator&#34;&gt;Global Accelerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#waf&#34;&gt;WAF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;hr&gt;
&lt;h3 id=&#34;relevant-patterns&#34;&gt;Relevant Patterns&lt;/h3&gt;
&lt;p&gt;common cloud native patterns to consider in the context of serverless architectures &lt;u&gt;of scale&lt;/u&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;event sourcing&lt;/li&gt;
&lt;li&gt;circuit breaker - trip circuit to prevent downstream systems overload&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/builders-library/using-load-shedding-to-avoid-overload/&#34;&gt;load shedding&lt;/a&gt; - prevent backlog buildup&lt;/li&gt;
&lt;li&gt;handle poison messages - prevent kinesis and dynamodb streams from progressing&lt;/li&gt;
&lt;li&gt;prevent distributed transactions.  e.g. lambda send job to SQS and stores status in dynamodb.  break it up.  lambda put job status in dynamo -&amp;gt; dynamo stream -&amp;gt; lambda send job to SQS&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;lambdahttpsawsamazoncomlambda&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;Lambda&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;synchronous vs asynchronous vs poll based (poll based is sync) - impacts automatic retries, stuck messages due to poison message, etc.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;see &lt;a href=&#34;https://aws.amazon.com/blogs/architecture/understanding-the-different-ways-to-invoke-lambda-functions/&#34;&gt;Understanding the Different Ways to Invoke Lambda Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if lambda is strictly a glue passthrough for API Gateway to call a backend AWS service, look to use &lt;a href=&#34;https://lumigo.io/blog/the-why-when-and-how-of-api-gateway-service-proxies/&#34;&gt;API Gateway Service Proxies&lt;/a&gt; to remove lambda.  simpler/cheaper/etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DLQ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lambda destinations (only for async invokes)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reserved concurrency - concurrency allocated for a specific function. e.g. i always want fn X to be able to run 10 lambda invokes concurrently&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;provisioned concurrency - pre-warmed lambda instances / no cold starts.  good for latency sensitive needs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;can optionally use auto scaling to adjust on based on metrics and/or schedule.&lt;/li&gt;
&lt;li&gt;will spill over to on-demand scaling (lambda default)&lt;/li&gt;
&lt;li&gt;Provisioned Concurrency comes out of your regional concurrency limit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;concurrent executions (throttles) - 1000 per account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;timeout - 15min&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set code timeouts based on remaining invocation time provided in context&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;burst concurrency - 500 - 3000&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;burst - 500 new instances / min&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;poll based options (kinesis, dynamodb, SQS)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;on-failure destination (SNS or SQS)&lt;/li&gt;
&lt;li&gt;retry attempts&lt;/li&gt;
&lt;li&gt;max age of record - use to implement load shedding (prioritize newer messages)&lt;/li&gt;
&lt;li&gt;split batch on error&lt;/li&gt;
&lt;li&gt;concurrent batches per shard&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;snshttpsawsamazoncomsns&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/sns/&#34;&gt;SNS&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;fan out to address scale&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/kms/&#34;&gt;KMS&lt;/a&gt; to encrypt payloads&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sqshttpsawsamazoncomsqs&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/sqs/&#34;&gt;SQS&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;batch size - batch fails as unit&lt;/li&gt;
&lt;li&gt;visibility timeout - set to 6x lambda timeout&lt;/li&gt;
&lt;li&gt;message retention period&lt;/li&gt;
&lt;li&gt;delivery delay - max 15min&lt;/li&gt;
&lt;li&gt;types - standard vs FIFO
&lt;ul&gt;
&lt;li&gt;standard - at least once delivery.  need to ensure idempotent&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;alarm on queue depth&lt;/li&gt;
&lt;li&gt;KMS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kinesishttpsawsamazoncomkinesis&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/kinesis/&#34;&gt;Kinesis&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;partition key - choose wisely as order is guaranteed per shard and pk determines the shard the message lands on&lt;/li&gt;
&lt;li&gt;poison messages (retry until success - can cause backlog)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/kms/&#34;&gt;KMS&lt;/a&gt; to encrypt payloads&lt;/li&gt;
&lt;li&gt;enhanced fan-out via AWS::Kinesis::StreamConsumer.  each consumer gets 2 MiB per second for every shard you subscribe to.  can subscribe a max of 5 consumers per stream.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;eventbridgehttpsawsamazoncomeventbridge&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/eventbridge/&#34;&gt;EventBridge&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;put events - 2400 requests per second per region&lt;/li&gt;
&lt;li&gt;invocation &lt;a href=&#34;https://docs.aws.amazon.com/eventbridge/latest/userguide/cloudwatch-limits-eventbridge.html&#34;&gt;quota&lt;/a&gt; -  4500 requests per second per region (invocation is an event matching a rule and being sent on to the rule’s targets)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dynamodbhttpsawsamazoncomdynamodb&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/dynamodb/&#34;&gt;DynamoDB&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;global tables - for resilient active-active architectures&lt;/li&gt;
&lt;li&gt;throttles&lt;/li&gt;
&lt;li&gt;streams - 24hr data retention.  poison messages (retry until success - can cause backlog)&lt;/li&gt;
&lt;li&gt;partition key - distribute data among nodes to minimize hot partitions&lt;/li&gt;
&lt;li&gt;TTL - can the data be removed automatically&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-functionshttpsawsamazoncomstep-functions&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/step-functions/&#34;&gt;Step Functions&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Standard Workflows vs &lt;a href=&#34;https://aws.amazon.com/about-aws/whats-new/2019/12/introducing-aws-step-functions-express-workflows/&#34;&gt;Express Workflows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://theburningmonk.com/2017/07/applying-the-saga-pattern-with-aws-lambda-and-step-functions/&#34;&gt;saga&lt;/a&gt; pattern for rollback&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/aws/new-step-functions-support-for-dynamic-parallelism/&#34;&gt;parallel map&lt;/a&gt; opportunities - run tasks in parallel&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;api-gatewayhttpsawsamazoncomapi-gateway&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/api-gateway/&#34;&gt;API Gateway&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;REST API vs &lt;a href=&#34;https://aws.amazon.com/blogs/compute/announcing-http-apis-for-amazon-api-gateway/&#34;&gt;HTTP API&lt;/a&gt; (&lt;a href=&#34;https://aws.amazon.com/api-gateway/pricing/&#34;&gt;cheaper&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html&#34;&gt;caching&lt;/a&gt; - fixed cost based on time / no pay per use&lt;/li&gt;
&lt;li&gt;throttles&lt;/li&gt;
&lt;li&gt;timeout - 29s&lt;/li&gt;
&lt;li&gt;auth - cognito, JWT, IAM (aws sigv4), custom lambda auth&lt;/li&gt;
&lt;li&gt;OpenAPI specs for payload validation&lt;/li&gt;
&lt;li&gt;service proxies - no need for lambda glue in middle&lt;/li&gt;
&lt;li&gt;custom domains&lt;/li&gt;
&lt;li&gt;websockets&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cloudfronthttpsawsamazoncomcloudfront&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/cloudfront/&#34;&gt;CloudFront&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html&#34;&gt;origin access identity&lt;/a&gt; to force traffic through CloudFront and removes direct access to S3 website domain URL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html&#34;&gt;signed URLs or cookies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lambda@edge - headers only requests, rewrite URLs, server-side rendering (SSR), auth, etc.&lt;/li&gt;
&lt;li&gt;cache invalidations&lt;/li&gt;
&lt;li&gt;non GET HTTP methods support.  must explicitly turn on support for PUT, POST, PATCH, etc.&lt;/li&gt;
&lt;li&gt;WAF in front&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;route53httpsawsamazoncomroute53&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/route53/&#34;&gt;Route53&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-geoproximity&#34;&gt;Geoproximity routing&lt;/a&gt; for global solutions serving multiple regions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;global-acceleratorhttpsawsamazoncomglobal-accelerator&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/global-accelerator/&#34;&gt;Global Accelerator&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;uses the AWS global network to optimize the path from your users to your applications, improving the performance of your traffic by as much as 60%&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;wafhttpsawsamazoncomwaf&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/waf/&#34;&gt;WAF&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;can put in front of API Gateway or CloudFront&lt;/li&gt;
&lt;li&gt;API Gateway provides overlapping functionality with WAF.  Need to determine the appropriate service to use.&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Serverless Golang</title>
<link>https://brianpfeil.com/post/serverless-golang/</link>
<pubDate>Wed, 17 Jun 2020 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-golang/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-golang-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-golang-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;see &lt;a href=&#34;myservice/README.md&#34;&gt;myservice/README.md&lt;/a&gt; for build and deploy steps&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this is based on serverless framework from Jan 2018 (just adding as repo now June 2020)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;see &lt;a href=&#34;https://golang.serverlessworkshops.io/&#34;&gt;golang.serverlessworkshops.io&lt;/a&gt; for more modern example (&lt;a href=&#34;https://blog.golang.org/using-go-modules&#34;&gt;go modules&lt;/a&gt;) using &lt;a href=&#34;https://aws.amazon.com/serverless/sam/&#34;&gt;AWS SAM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
</item>
    
    <item>
<title>Serverless Lambda Java</title>
<link>https://brianpfeil.com/post/serverless-lambda-java/</link>
<pubDate>Sun, 27 Oct 2019 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-lambda-java/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-lambda-java-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-lambda-java-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://serverless.com/&#34;&gt;serverless framework&lt;/a&gt; + &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/java-programming-model.html&#34;&gt;lambda java&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;build-and-deploy&#34;&gt;Build and Deploy&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/projects/serverless-lambda-java-playground
serverless create --template aws-java-maven
mvn clean install
sls deploy --verbose
sls invoke --function hello --data &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;msg&amp;#34;: &amp;#34;hello&amp;#34;}&amp;#39;&lt;/span&gt; --log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;statusCode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{\&amp;#34;message\&amp;#34;:\&amp;#34;Go Serverless v1.x! Your function executed successfully!\&amp;#34;,\&amp;#34;input\&amp;#34;:{}}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;X-Powered-By&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;AWS Lambda &amp;amp; serverless&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;isBase64Encoded&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://serverless.com/blog/how-to-create-a-rest-api-in-java-using-dynamodb-and-serverless/&#34;&gt;How to create a REST API in Java using DynamoDB and Serverless&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>AWS Serverless Application Repository</title>
<link>https://brianpfeil.com/post/aws-serverless-application-repository/</link>
<pubDate>Mon, 14 Oct 2019 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/aws-serverless-application-repository/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/aws-serverless-application-repository-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/aws-serverless-application-repository-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn &lt;a href=&#34;https://docs.aws.amazon.com/en_pv/serverlessrepo&#34;&gt;AWS Serverless Application Repository&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;example-using-sam-cli&#34;&gt;Example using SAM CLI&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# define deployment bucket&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;BUCKET&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sam-deploy-bucket-01&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# init sam app&lt;/span&gt;
sam init --runtime nodejs
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; sam-app

&lt;span class=&#34;c1&#34;&gt;# &amp;#34; create a Lambda deployment package&amp;#34;.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# add Metadata section to `template.yml`. see https://docs.aws.amazon.com/en_pv/serverlessrepo/latest/devguide/serverlessrepo-quick-start.html#serverlessrepo-quick-start-hello-world-package-app&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# package&lt;/span&gt;
sam package &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --template-file template.yaml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --output-template-file packaged.yaml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --s3-bucket &lt;span class=&#34;nv&#34;&gt;$BUCKET&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# publish to SAR.  will be private by default&lt;/span&gt;
sam publish &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --template packaged.yaml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --region us-east-1

&lt;span class=&#34;c1&#34;&gt;# create SAM app to consume SAR (embedded SAR)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# embed SAR (`Type: AWS::Serverless::Application`) in template.  see https://docs.aws.amazon.com/en_pv/serverless-application-model/latest/developerguide/serverless-sam-template.html#serverless-sam-template-application&lt;/span&gt;
touch embed-serverless-application.yaml

&lt;span class=&#34;c1&#34;&gt;# package embedded app&lt;/span&gt;
sam package &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --template-file embed-serverless-application.yaml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --output-template-file embed-serverless-application-packaged.yaml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --s3-bucket &lt;span class=&#34;nv&#34;&gt;$BUCKET&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# define name for stack&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;STACK_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;embed-serverless-application&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# deploy embedded app.  note usage of `CAPABILITY_AUTO_EXPAND` param&lt;/span&gt;
sam deploy --template-file ./embed-serverless-application-packaged.yaml --stack-name &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$STACK_NAME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND

&lt;span class=&#34;c1&#34;&gt;# two stacks are created.  the parent (sam-app/embed-serverless-application-packaged.yaml) and the emb embedded SAR (packaged.yaml)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# cleanup / remove stack(s)&lt;/span&gt;
aws cloudformation delete-stack --stack-name &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$STACK_NAME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SAR App in Console&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHSgG3f8apCC5F6fvQ178_xBzILM6IP110B/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Nested CFN Stacks&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHO3LiMwJ1MeKiiqKxCk4yW10qtVMdusyMB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;example-using-aws-serverlessrepo-cli&#34;&gt;Example using &lt;code&gt;aws serverlessrepo&lt;/code&gt; CLI&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;can also be done (and is preferred) via sam cli.  see above.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir sar-cli-example
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; sar-cli-example

&lt;span class=&#34;nv&#34;&gt;APP_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;myapp01

aws serverlessrepo list-applications

&lt;span class=&#34;c1&#34;&gt;# create appliction&lt;/span&gt;
aws serverlessrepo create-application &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--author &lt;span class=&#34;s1&#34;&gt;&amp;#39;Brian Pfeil&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--description &lt;span class=&#34;nv&#34;&gt;$APP_NAME&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--name &lt;span class=&#34;nv&#34;&gt;$APP_NAME&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--semantic-version 0.0.1 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--template-body file://./s3-bucket-template.yaml

&lt;span class=&#34;c1&#34;&gt;# fetch ApplicationId&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;APP_ID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;aws serverlessrepo list-applications &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq --raw-output &lt;span class=&#34;s2&#34;&gt;&amp;#34;.Applications[] | select(.Name == \&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$APP_NAME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;\&amp;#34;).ApplicationId&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# create request to create cfn template (async operation)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TEMPLATE_ID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;aws serverlessrepo create-cloud-formation-template --application-id &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$APP_ID&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq --raw-output &lt;span class=&#34;s2&#34;&gt;&amp;#34;.TemplateId&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# fetch the cfn template&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TEMPLATE_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;aws serverlessrepo get-cloud-formation-template --application-id &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$APP_ID&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; --template-id &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TEMPLATE_ID&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq --raw-output &lt;span class=&#34;s2&#34;&gt;&amp;#34;.TemplateUrl&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# view cfn template&lt;/span&gt;
curl &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TEMPLATE_URL&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# delete app&lt;/span&gt;
aws serverlessrepo delete-application --application-id &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$APP_ID&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>Serverless Lambda Layers</title>
<link>https://brianpfeil.com/post/serverless-lambda-layers/</link>
<pubDate>Wed, 18 Sep 2019 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-lambda-layers/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-lambda-layers-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-lambda-layers-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn lambda layers with serverless framework&lt;/p&gt;
&lt;h2 id=&#34;running&#34;&gt;Running&lt;/h2&gt;
&lt;p&gt;see &lt;a href=&#34;serverless.yml&#34;&gt;&lt;code&gt;serverless.yml&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;index.js&#34;&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;layers are applied in order, meaning last layer in array is applied last and will overwrite any common files in other layers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span class=&#34;c1&#34;&gt;# install deps&lt;/span&gt;
npm i

&lt;span class=&#34;c1&#34;&gt;# run via local packages sls&lt;/span&gt;
npm run sls -- deploy

&lt;span class=&#34;c1&#34;&gt;# invoke and view logs&lt;/span&gt;
npm run sls -- invoke --function hello --log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAFsMFGUI8dB5LcruXVZSdIMEVGMsxFDoE4B/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAEMx_FKalVN8YYr1pF_9gpeC_vlpaAkNVAB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://serverless.com/framework/docs/providers/aws/guide/layers/&#34;&gt;serverless docs | AWS - Layers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/appgambit/part-2-create-lambda-layers-with-serverless-framework-and-offline-support-ad2a5a8dabfb&#34;&gt;Part 2 — Create Lambda Layers with Serverless Framework and Offline support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Serverless Plugin CloudFront Lambda Edge</title>
<link>https://brianpfeil.com/post/serverless-plugin-cloudfront-lambda-edge/</link>
<pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-plugin-cloudfront-lambda-edge/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-plugin-cloudfront-lambda-edge-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-plugin-cloudfront-lambda-edge-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;learn &lt;a href=&#34;https://github.com/silvermine/serverless-plugin-cloudfront-lambda-edge&#34;&gt;silvermine/serverless-plugin-cloudfront-lambda-edge&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;visit &lt;a href=&#34;https://d3cztrjc4xcpde.cloudfront.net&#34;&gt;https://d3cztrjc4xcpde.cloudfront.net&lt;/a&gt; and login with user01/password01&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Basic Auth Challenge&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;username: user01
password: password01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;users are stored in aws secrets manager and sourced from &lt;a href=&#34;users.json&#34;&gt;&lt;code&gt;users.json&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# deploy all (provision infra, build static site, copy to s3, invalidate cache).&lt;/span&gt;
npm run deploy

&lt;span class=&#34;c1&#34;&gt;# separate component deploys&lt;/span&gt;
npm run deploy-infrastructure
npm run build-static-site &lt;span class=&#34;c1&#34;&gt;# gatsby&lt;/span&gt;
npm run publish-static-assets-to-bucket
npm run cloudfront:invalidate

&lt;span class=&#34;c1&#34;&gt;# bucket&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# not accessible because of Origin Access Identity applied&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# e.g. http://s3-cf-private-static-site-01-dev.s3-website-us-east-1.amazonaws.com&lt;/span&gt;
open &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;node scripts/get-stack-property.js WebsiteBucketName&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.s3-website-us-east-1.amazonaws.com/index.html&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# cloudfront url. e.g. https://d3cztrjc4xcpde.cloudfront.net&lt;/span&gt;
open &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;node scripts/get-stack-property.js CloudFrontDistributionDomainName&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;removing-auth&#34;&gt;Removing Auth&lt;/h2&gt;
&lt;p&gt;Update CloudFront Behavior to remove &amp;ldquo;Viewer Request&amp;rdquo; &amp;ldquo;Lambda Function Association&amp;rdquo;, then invalidate cache on all &amp;ldquo;*&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;viewing-cloudwatch-logs-for-lambdaedge-functions&#34;&gt;Viewing CloudWatch Logs for Lambda@Edge Functions&lt;/h2&gt;
&lt;p&gt;logging takes place in the region of the edge (PoP) location.  This will vary based on the client location.&lt;/p&gt;
&lt;p&gt;Visit CloudFront | Monitoring | Lambda@Edge Functions | YOUR FUNCTION, then click &lt;code&gt;[View Function Metrics]&lt;/code&gt; button&lt;/p&gt;
&lt;p&gt;see &lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-edge-testing-debugging.html#lambda-edge-testing-debugging-determine-region&#34;&gt;Determining the Lambda@Edge Region&lt;/a&gt; for more details&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAH3ZzTj929MNqiRZIcn1zj1G0WzeI5ZSGQB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;lambdaedge-request&#34;&gt;Lambda@Edge Request&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;event&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;Records&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;cf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;distributionDomainName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;d13ydba49ilc9v.cloudfront.net&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;distributionId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;E20V9SS2N0VT6P&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;eventType&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;viewer-request&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;requestId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;NcxNfOh2NaptKOLBlSimVF7AAlRp10OM-F1-CMZsJOGSMEkHUVd25A==&amp;#34;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;request&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;clientIp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;100.11.96.70&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;d13ydba49ilc9v.cloudfront.net&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;user-agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;authorization&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;authorization&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Basic dXNlcjpwYXNz&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;upgrade-insecure-requests&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;upgrade-insecure-requests&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;sec-fetch-mode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sec-fetch-mode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;navigate&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;sec-fetch-user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sec-fetch-user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;?1&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;accept&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;accept&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;sec-fetch-site&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sec-fetch-site&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;accept-encoding&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;accept-encoding&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gzip, deflate, br&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;accept-language&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;accept-language&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;en-US,en;q=0.9,nb;q=0.8,fr;q=0.7&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;if-none-match&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;if-none-match&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;\&amp;#34;2cad58ac06c32be3c6384050881bc507\&amp;#34;&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;#34;if-modified-since&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;if-modified-since&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Tue, 10 Sep 2019 21:32:57 GMT&amp;#34;&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
                        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;querystring&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;add origin access identity
&lt;ul&gt;
&lt;li&gt;see the following for cfn markup &lt;a href=&#34;https://github.com/lroguet/amzn-cloudformation/blob/master/storage-content-delivery/static-website-with-cloudfront.yml&#34;&gt;https://github.com/lroguet/amzn-cloudformation/blob/master/storage-content-delivery/static-website-with-cloudfront.yml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html&#34;&gt;Restricting Access to Amazon S3 Content by Using an Origin Access Identity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;S3 Bucket | &lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-6&#34;&gt;Granting Permission to an Amazon CloudFront Origin Identity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;todo&#34;&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;DNS (route 53)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html&#34;&gt;Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name&lt;/a&gt;.  Covers [root|sub]domainsG&lt;/li&gt;
&lt;li&gt;see &lt;a href=&#34;https://www.brautaset.org/articles/2017/route-53-cloudformation.html&#34;&gt;https://www.brautaset.org/articles/2017/route-53-cloudformation.html&lt;/a&gt;.  Contains ApexRecordSet (example.com) and WwwRecordSet (&lt;a href=&#34;http://www.example.com&#34;&gt;www.example.com&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-route53.html#w2ab1c17c23c81c11&#34;&gt;Alias Resource Record Set for a CloudFront Distribution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;update &lt;code&gt;serverless.yml:iamRoleStatements&lt;/code&gt; with dynamic region, account id, and secretsmanager name
&lt;ul&gt;
&lt;li&gt;via &lt;a href=&#34;https://github.com/svdgraaf/serverless-pseudo-parameters#readme&#34;&gt;serverless-pseudo-parameters&lt;/a&gt; plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scratch&#34;&gt;Scratch&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$(node ./scripts/get-stack-property.js )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>Serverless Framework Full Lifecycle with Dashboard</title>
<link>https://brianpfeil.com/post/serverless-framework-full-lifecycle-with-dashboard/</link>
<pubDate>Tue, 20 Aug 2019 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-framework-full-lifecycle-with-dashboard/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-framework-full-lifecycle-with-dashboard-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-framework-full-lifecycle-with-dashboard-playground&lt;/a&gt;
&lt;/div&gt;
&lt;h1 id=&#34;serverless-framework-full-lifecycle-with-dashboard-playground&#34;&gt;serverless-framework-full-lifecycle-with-dashboard-playground&lt;/h1&gt;
&lt;p&gt;learn and understand how &lt;a href=&#34;https://serverless.com/blog/serverless-now-full-lifecycle/&#34;&gt;Serverless Framework – Now, Full Lifecycle&lt;/a&gt; works.  This allows serverless to instrument code, send cloudwatch logs to the serverless SaaS.  This allows serverless to provide the &lt;a href=&#34;https://serverless.com/framework/docs/dashboard/&#34;&gt;Serverless Dashboard&lt;/a&gt; features&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Running &lt;code&gt;serverless&lt;/code&gt; from cli to create project&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAGMIc4-FIJCSZXUtSiZZqr-jnavut4x_A0B/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;service&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt;, and &lt;code&gt;org&lt;/code&gt; top-level properties added to &lt;code&gt;serverless.yml&lt;/code&gt; enable serverless full lifecycle / dashboard&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;serverless-with-dashboard-playground-01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;serverless-with-dashboard-playground-01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pfeilbr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAH9J_9FRfFGH7uiu2JonnyeBowUC_-cU0kB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To disable, add the following to &lt;code&gt;serverless.yml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;custom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enterprise&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;collectLambdaLogs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Serverless framework creates a role during the deploy. This allows for the cloudwatch log group logs to be sent to serverless SaaS app.  e.g. &lt;code&gt;arn:aws:iam::529276214230:role/serverless-with-dashboard-EnterpriseLogAccessIamRo-19SDI69RM1KJ4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAFnznpUKxhHjIXCHwFwzUcmYXBdiLCgln0B/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;inline policy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2012-10-17&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;Statement&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                &lt;span class=&#34;s2&#34;&gt;&amp;#34;logs:FilterLogEvents&amp;#34;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;Resource&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
                &lt;span class=&#34;s2&#34;&gt;&amp;#34;arn:aws:logs:us-east-1:529276214230:log-group:/aws/lambda/serverless-with-dashboard-playground-01-dev-hello:*&amp;#34;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;trust relationship&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;trust serverless aws account &lt;code&gt;802587217904&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2012-10-17&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Statement&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;Principal&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;AWS&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;arn:aws:iam::802587217904:root&amp;#34;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sts:AssumeRole&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;Condition&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;StringEquals&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;#34;sts:ExternalId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ServerlessEnterprise-LGGXBmZw2Z47MmWq6b&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Instrumented/wrapped Code Example&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On deploy, serverless instruments/wraps your code/handlers.  You don&amp;rsquo;t see this locally in your codebase.  You only see on the deployment side in AWS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHPyNZCdhlEwbjGnpVNd1Qr8IiEHLdfRB4B/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;embedded/bundled serverless SDK
&lt;img src=&#34;https://www.evernote.com/l/AAEWGJxVG6BCFY7nuiFMRRdiEeBOaC-ACjoB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVERLESS_ENTERPRISE&lt;/code&gt; wrapped log example&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;serverless hooks logging to stdout and stderr via &lt;code&gt;serverlessSDK&lt;/code&gt;.  This allows it to log structured JSON logs to cloudwatch logs with the prefix &lt;code&gt;SERVERLESS_ENTERPRISE&lt;/code&gt;.  This logging is additional, the &lt;code&gt;console.log&lt;/code&gt;s are logged independently.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAGXImGSXy5ATKrP5-qDPHT3RMs7OfMMj9wB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To see the log group subscription details&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aws logs describe-subscription-filters --log-group-name &#39;/aws/lambda/serverless-with-dashboard-playground-01-dev-hello&#39;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;subscriptionFilters&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;filterPattern&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;?\&amp;#34;REPORT RequestId: \&amp;#34; ?\&amp;#34;SERVERLESS_ENTERPRISE\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;filterName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;serverless-with-dashboard-playground-01-dev-CloudWatchLogsSubscriptionFilterHelloLogGroup-1SAKWRFMW5JHE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;creationTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1566318781436&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;logGroupName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/aws/lambda/serverless-with-dashboard-playground-01-dev-hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;destinationArn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;arn:aws:logs:us-east-1:802587217904:destination:LGGXBmZw2Z47MmWq6b#VlGYyRJNfvVVgHf8y1#serverless-with-dashboard-playground-01#dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;distribution&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ByLogStream&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It sends logs to the serverless AWS account (&lt;code&gt;802587217904&lt;/code&gt;).  The &lt;code&gt;destinationArn: arn:aws:logs:us-east-1:802587217904:destination:LGGXBmZw2Z47MmWq6b#VlGYyRJNfvVVgHf8y1#serverless-with-dashboard-playground-01#dev&lt;/code&gt; is a &lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CreateDestination.html&#34;&gt;kinesis stream&lt;/a&gt; within the serverless AWS account.&lt;/p&gt;
&lt;p&gt;This is done via &lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CrossAccountSubscriptions.html&#34;&gt;Cross-Account Log Data Sharing with Subscriptions&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Serverless Dashboard | Views&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAGYJOJTHApN_JpkCV9-zdcb715b6wEMRboB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;safeguard policies&amp;rdquo; are evaluated on &lt;code&gt;serverless deploy&lt;/code&gt;
&lt;img src=&#34;https://www.evernote.com/l/AAHh34xEDRZPMZvdU3OB9gTRjZGuTcfWavsB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHPvh8KYGtDzp-FJpeJJkD9YQMDlMoV_ZkB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAEQi7li2WpL-4bLb1_Ot_Gu582YPZrYh5oB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAFGw-o8o3VJP5LHwE3xALCQtHh-0MvopoYB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHb32bKNhNB47q-tjd9FcBhpH4x0q0TXwMB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHv-DCGUmxCG6nBhHqcJWf7WY15kUwoX8cB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAFSDTovX61GYqcknC4dRdTFafjVuAvuWFIB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAGF3ML-wkFM1bPRMMGiUtvsKzXxGmI1E3gB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAHY5jTZcXpLPJJwKhIsKWgRblpvrmHgXlsB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Send notifications (e.g. email)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAGxGtV1-idIoKXzkqvTi4PMf-zWDtoNMRcB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AAEfN4z9jZZFVaDVyiQOBU1-FP9kIwZnmnEB/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/aws/comments/cghxro/serverless_framework_now_supports_full_lifecycle/&#34;&gt;reddit | Serverless Framework now supports full lifecycle on AWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Azure Serverless Framework</title>
<link>https://brianpfeil.com/post/azure-serverless-framework/</link>
<pubDate>Fri, 10 May 2019 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/azure-serverless-framework/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/azure-serverless-framework-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/azure-serverless-framework-playground&lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;learn &lt;a href=&#34;https://serverless.com/framework/docs/providers/azure/&#34;&gt;serverless framework for azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;source @  &lt;a href=&#34;src/services/hello-world&#34;&gt;&lt;code&gt;src/services/hello-world&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;see &lt;a href=&#34;https://serverless.com/framework/docs/providers/azure/guide/credentials/&#34;&gt;Azure - Credentials&lt;/a&gt; for getting setup&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>AWS API Gateway WebSockets Serverless</title>
<link>https://brianpfeil.com/post/aws-api-gateway-websockets-serverless/</link>
<pubDate>Tue, 08 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/aws-api-gateway-websockets-serverless/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/aws-api-gateway-websockets-serverless-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/aws-api-gateway-websockets-serverless-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;update 2019-10-03&lt;/em&gt;: websocket events are now &amp;ldquo;natively supported in serverless framework&amp;rdquo; no longer need to use &lt;code&gt;serverless-websockets-plugin&lt;/code&gt;.  see &lt;a href=&#34;https://serverless.com/framework/docs/providers/aws/events/websocket/&#34;&gt;https://serverless.com/framework/docs/providers/aws/events/websocket/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;below uses &lt;code&gt;serverless-websockets-plugin&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;learn AWS API Gateway Websockets with &lt;a href=&#34;https://serverless.com/framework/&#34;&gt;serverless framework&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://serverless.com/blog/api-gateway-websockets-example/&#34;&gt;Using API Gateway WebSockets with the Serverless Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/serverless/serverless-websockets-plugin/tree/master/example&#34;&gt;serverless-websockets-plugin/example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-control-access.html&#34;&gt;Control Access to a WebSocket API in API Gateway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/apigateway/latest/developerguide/limits.html#apigateway-execution-service-websocket-limits-table&#34;&gt;API Gateway Limits for Configuring and Running a WebSocket API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Serverless Python</title>
<link>https://brianpfeil.com/post/serverless-python/</link>
<pubDate>Fri, 10 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-python/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-python-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-python-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;experiment with the &lt;a href=&#34;https://serverless.com/framework/&#34;&gt;serverless framework&lt;/a&gt; using python&lt;/p&gt;
&lt;p&gt;based on &lt;a href=&#34;https://serverless.com/blog/serverless-python-packaging/&#34;&gt;https://serverless.com/blog/serverless-python-packaging/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;session&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# install `serverless framework` if not already installed&lt;/span&gt;
npm install serverless -g

&lt;span class=&#34;c1&#34;&gt;# create serverless python project&lt;/span&gt;
serverless create --template aws-python3  --name numpy-test --path numpy-test

&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; numpy-test

&lt;span class=&#34;c1&#34;&gt;# create isolated virtualenv&lt;/span&gt;
virtualenv venv --python&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;python3
touch handler.py
code .
&lt;span class=&#34;c1&#34;&gt;# add code for `handler.py`&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# activate virtualenv&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; venv/bin/activate

&lt;span class=&#34;c1&#34;&gt;# run to test&lt;/span&gt;
python handler.py

pip install numpy

&lt;span class=&#34;c1&#34;&gt;# save dependencies&lt;/span&gt;
pip freeze &amp;gt; requirements.txt
cat requirements.txt

&lt;span class=&#34;c1&#34;&gt;# install dependencies (don&amp;#39;t need to execute if starting from scratch)&lt;/span&gt;
pip install -r requirements.txt

python handler.py
npm init --force

&lt;span class=&#34;c1&#34;&gt;# add serverless `serverless-python-requirements` plugin&lt;/span&gt;
npm install --save serverless-python-requirements

&lt;span class=&#34;c1&#34;&gt;# deploy&lt;/span&gt;
sls deploy

&lt;span class=&#34;c1&#34;&gt;# invoke lambda and output log&lt;/span&gt;
sls invoke -f numpy --log

&lt;span class=&#34;c1&#34;&gt;# cleanup&lt;/span&gt;
sls remove
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>Serverless TypeScript webpack</title>
<link>https://brianpfeil.com/post/serverless-typescript-webpack/</link>
<pubDate>Tue, 11 Jul 2017 00:00:00 -0400</pubDate>
      
      <guid>https://brianpfeil.com/post/serverless-typescript-webpack/</guid>
<description>&lt;div class=&#34;alert alert-info small bg-info&#34; role=&#34;alert&#34;&gt;
&lt;span class=&#34;text-muted&#34;&gt;code for article&lt;/span&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/pfeilbr/serverless-typescript-webpack-playground&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-github fa-sm&#34;&gt;&lt;/i&gt;&amp;nbsp;pfeilbr/serverless-typescript-webpack-playground&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;project to learn/explore &lt;a href=&#34;https://serverless.com/&#34;&gt;serverless&lt;/a&gt; + &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;typescript&lt;/a&gt; + &lt;a href=&#34;https://webpack.js.org/&#34;&gt;webpack&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;session&#34;&gt;Session&lt;/h2&gt;
&lt;p&gt;example testing and deployment session&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# cd to service dir&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; src/services/logger

&lt;span class=&#34;c1&#34;&gt;# local test&lt;/span&gt;
../../../node_modules/.bin/sls webpack invoke -f scan --data &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;key1&amp;#34;:&amp;#34;value1&amp;#34;, &amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;}&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# deploy&lt;/span&gt;
../../../node_modules/.bin/sls deploy

&lt;span class=&#34;c1&#34;&gt;# test logger endpoint - create log item&lt;/span&gt;
curl -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;key1&amp;#34;:&amp;#34;value1&amp;#34;, &amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;}&amp;#39;&lt;/span&gt; -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -X POST https://4qodphulj8.execute-api.us-east-1.amazonaws.com/dev/logger

&lt;span class=&#34;c1&#34;&gt;# lambda-limits service&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# invoke concurrent lambda executions test&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ***warning** understand/check resource usage&lt;/span&gt;
curl -X POST https://m1v5komsge.execute-api.us-east-1.amazonaws.com/dev/lambda-limits/concurrent

&lt;span class=&#34;c1&#34;&gt;# kinesis-playground&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# PUT record&lt;/span&gt;
curl -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;key1&amp;#34;:&amp;#34;value1&amp;#34;, &amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;}&amp;#39;&lt;/span&gt; -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -X POST https://ijkemqb2r8.execute-api.us-east-1.amazonaws.com/dev/stream/put

&lt;span class=&#34;c1&#34;&gt;# tail remote logs&lt;/span&gt;
../../../node_modules/.bin/sls logs -f hello -t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;updated &lt;code&gt;tsconfig.json&lt;/code&gt; with &lt;code&gt;&amp;quot;target&amp;quot;: &amp;quot;es2015&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;needed to add the following for webpack + awesome-typescript-loader to run without errors&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yarn add @types/node --dev
yarn add @types/async --dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
  </channel>
</rss>